<html>
<head>
<title>Try KRL</title>


<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" rel="stylesheet">

<style type="text/css" media="screen">
    textarea {
        display: block;
        margin: auto;
        width: 600px;
        height: 5px;
    }
    #editor_div {
        display: block;
        margin: auto;
//        width: 600px;
        height: 400px;
        border: 1px solid #888;
    }
    form {
        text-align: center;
    }
    .code { font-family: monospace; }
</style>

</head>
<body>

<div class="container">
<div class="row">
<h2>KRL Declarations Evaluator</h2>

<p>
Enter a list of <a href="http://developer.picolabs.io/display/docs/Declarations">KRL declarations</a> in the editor block. Note that they should not be wrapped in a <code>pre</code> or <code>global</code>. The editor is doing Javascript highlighting, which is close, but not exact. 
</p>
</div> <!-- row -->

<div class="row">

</div> <!-- row -->

<div class="row">
<div class="col-md-6">    
<div id="editor_div"><TMPL_VAR NAME=CODE></div>


<form method="post" action="<TMPL_VAR NAME=ACTION_URL>">

<textarea name="code" rows="20" cols="80">
</textarea>

<p style="margin-top:10px">
<input id="submit" type="submit" value="Evaluate!" />
<input id="reset" type="reset" value="Reset" />
<input id="shorten" type="button" value="Short URL" />
<div id="results"></div>
</p>
</form>
<p>
Note: The evaluation doesn't know about persistent variables, event attributes, and other values that are only available within the context of a specific pico. 
</p>


</div> <!-- left side -->

<div class="col-md-6">

<TMPL_IF NAME=JSON>
<pre id="json" class="alert alert-success code" role="alert">
<TMPL_VAR NAME=JSON>
</pre>
</TMPL_IF>

<TMPL_IF NAME=ERROR>
<p>
There is a syntax error:
</p>

<div class="alert alert-danger code" role="alert" id="error">
<TMPL_VAR NAME=ERROR>
</div>
</TMPL_IF>

</div> <!-- right side -->

</div><!-- row -->

<div class="row">

<h2>Examples</h2>


<p>
This is a simple example:
</p>

<pre class='code'>
a = 4;
b = 6;
c = a * b;
</pre>


<p>
The results don't show functions. 
</p>

<pre class='code'>
a = [5, 6, 7];
f = function(x){x * x};
b = a.map(f)
</pre>


<p>
This is an example where the JavaScript syntax checker fails because this <em>is</em> valid KRL:
</p>


<pre class='code'>
a = [5, 6, 7];
b = {"x" : 40};
f = function(x){x * x};
c = a.map(f)
     .filter(function(x){x < b{"x"}})
</pre>

</div> <!-- row -->

</div> <!-- container -->


        <!-- jQuery -->
        <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/2.0.2/jquery.min.js"></script>
        <!-- Bootstrap JavaScript-->
        <script type="text/javascript" src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>

	<script src="https://ajaxorg.github.io/ace-builds/src-noconflict/ace.js" type="text/javascript" charset="utf-8"></script>
<script>
    var textarea = $('textarea[name="code"]');
    textarea.hide();
    var editor = ace.edit("editor_div");
    editor.setTheme("ace/theme/monokai");
    editor.getSession().setMode("ace/mode/javascript");
    editor.getSession().setUseWorker(false);
    editor.setOption("showPrintMargin", false);
    $('#submit').on('click', function() {
        textarea.val(editor.getSession().getValue());
    });
    $('#reset').on('click', function() {
        editor.getSession().setValue("");
    });

    function makeRequest() {
      var longUrl = location.protocol + "://" + 
                    location.hostname + 
                    location.pathname + "?code=" +
                    encodeURIComponent(editor.getSession().getValue());
      var request = gapi.client.urlshortener.url.insert({
	         'longUrl': longUrl
      });
      request.then(function(response) {
        $('#results').html(response.result.id);
      }, function(reason) {
        console.log('Error: ' + reason.result.error.message);
      });
    }

    function init() {
      gapi.client.setApiKey('<TMPL_VAR NAME=GOOGLE_SHORTENER_API_KEY>');
      gapi.client.load('urlshortener', 'v1').then(makeRequest);
    }

    $("#shorten").on('click', function() {
      init();
    });

</script>

<script src="https://apis.google.com/js/client.js"></script>


</body>
</html>
