{"global":[{"source":"http://fmm.kynetx.com/lookup/","name":"maps","type":"datasource","datatype":"JSON","cachable":{"period":"seconds","value":"30"}},{"emit":"/*\tProperty of Kynetx, Inc.\n *\n *\n *\tChangelog: \n *\t\tThe currently deployed version will be marked with a * after the version number\n *\n *\t\tVersion 5144, Deployed on Tue, June 22, 2010\n *\t\t\t- Clicking and other events\n *\t\t\t- Unhighlighting forms which had data, but are then emptied out\n *\t\tVersion 5147, commited on Tue, June 22, 2010, 2:46 PM MST\n *\t\t\t- Nuking labels (Mostly for www.apple.com)\n *\n *\t\tVersion 5148, commited on Tue, June 22, 2010, 2:54 PM MST\n *\t\t\t- Phone Format nnn-nnn-nnnn\n *\t\t\t- Phone Format (nnn)nnn-nnnn\n *\t\tVersion 5149, commited on Tue, June 22, 2010, 3:02 PM MST\n *\t\t\t- Rearraged order of the formats to group new phone formats with the old ones.\n *\t\t\t- Fixed the slice statements in the new phone formats to be correct.\n *\t\tVersion 5150, commited on Tue, June 22, 2010, 3:11 PM MST\n *\t\t\t- Fixed me screwing up the slice on the phone formats. Changed from calling valuepassed(6,10) to valuepassed.slice(6,10)\n *\t\tVersion 5151, commited on Tue, June 22, 2010, 3:22 PM MST\n *\t\t\t- Changed order of some of the events (click, etc.) to be triggered AFTER the value is set. Also added other events (blur, keydown, etc.).\n *\t\tVersion 5152, commited on Wednesday, June 23, 2010, 11:48 PM MST\n *\t\t\t- Added \"!important\" to highlighting.\n *\t\t\t- Added \"CCType w/ AmericanExpress\" Credit Card Type format\n *\t\tVersion 5153, committed on Wednesday, June 23, 2010, 11:50 PM MST\n *\t\t\t- Added \";\" at the end of the \"!important\" for highlighting.\n *\t\tVersion 5154, committed on Wednesday, June 23, 2010, 1:20 PM MST\n *\t\t\t- Forgot to set done to true in the first drop down specialty try. Should help fix errors where things would fill, then unfill.\n *\t\tVersion 5162, committed on Wednesday, June 23, 2010, 1:43 PM MST\n *\t\t\t- Add an option to the map called no_change which causes the \"change\" event to not be fired on that element. Fixes state fields on TigerDirect and CircutCity.\n *\t\tVersion 5177, committed on Friday, June 25th, 2010, 11:59 AM MST\n *\t\t\t- Changed the \"onchange\" event to be disabled by default. The \"change\" event was causing a lot of issues. To enable change events, pass '\"change\":\"true\"'\n *\t\tVersion 5209, committed on Tuesday, June 29th, 2010, 11:23 AM MST\n *\t\t\t- Added better radio button support. Should cover most of them.\n *\t\tVersion 5214, committed on Tuesday, June 29th, 2010, 12:12 PM MST\n *\t\t\t- Changed logic to support radio buttons where the first element is not the one you want.\n *\t\tVersion 5219, committed on Wednesday, June 30th, 2010, 12:09 PM MST\n *\t\t\t- Changed drop down logic some to do better with optgroups.\n *\t\tVersion 5221, committed on Wednesday, June 30th, 2010, 12:21 PM MST\n *\t\t\t- Added \"CCType w/ AMEX and Master Card\" format.\n *\t\tVersion 5228, committed on Wednesday, July 6th, 2010, 8:00 PM MST\n *\t\t\t- Casted value as string aftef the KOBJ.formatData function call.\n *\t\tVersion 5232, committed on Wednesday, July 6th, 2010, 8:11 PM MST\n *\t\t\t- Compare as \"0\" rather than 0 on line 749.\n *\t\tVersion 5235, committed on Wednesday, July 6th, 2010, 8:13 PM MST\n *\t\t\t- Use .charAt(0) rather than [0] for IE on line 751, for www.diapers.com\n *\t\tVersion 5236, committed on Wednesday, July 6th, 2010, 8:15 PM MST\n *\t\t\t- Removed extra logging statements inserted in version 5232.\n *\t\tVersion 5242, committed on Wednesday, July 7th, 2010 at 9:08 AM MST\n *\t\t\t- Added \"CCType w/ AMEX and Master Card\" for www.childrensplace.com\n *\t\tVersion 5244, committed on Wednesday, July 7th, 2010 at 10:12 AM MST\n *\t\t\t- Added \"hidden\" type of form for pcconnection.com and pcconnectionexpress.com\n *\t\tVersion 5246, committed on Wednesday, July 7th, 2010 at 10:45 AM MST\n *\t\t\t- Added num2 format for www.pcconnection.com\n *\t\tVersion 5250, committed on Wednesday, July 7th 2010 at 1:28 PM CST\n *\t\t\t- Added num3 format for www.pcmall.com\n *\t\tVersion 5251, committed on Wednesday, July 7th 2010 at 2:21 PM CST\n *\t\t\t- Updated UnitedStates tag for www.singaporeair.com\n *\t\tVersion 5253, committed on Wednesday, July 7th, 2010 at 3:38 PM CST\n *\t\t\t- Added recognition of images in place of radio buttons\n *\t\tVersion 5264, committed on Thursday, July 8th, 2010 at 8:51 AM CST\n *\t\t\t- Fixed radio button for bhphotovideo.com\n *\t\tVersion 5273, committed on Thursday, July 8th, 2010 at 2:34 PM CST by JAM\n *\t\t\t- Refactored code which determines which type of element it is (radio button, select, text box, etc.). Done for www.bedbathandbeyond.com\n *\t\tVersion 5276 * (p.s. dates are not needed. Commit times are stored by the system)\n *\t\t\t- Refactored iframe and frame code to allow for frames within frames, etc. for www.westjet.com\n *\t\tVersion 5277\n *\t\t\t- Placed throws closer to the if blocks that were throwing them. -- JAM\n *\t\tVersion 5279\n *\t\t\t- Fixes in the iframe code. Wasn't fully working due to the way I was doing my split and constructing the new selector string. Iframe function now accepts either an array of selectors or a string of selectors separated by \"|\".\n\t*\t\tVersion 5281\n\t*\t\t\t- Added support to change links. Needed for www.sonystyle.com\n\t*\t\tVersion 5282\n\t*\t\t\t- Added logic to remove highlight if the current element is hidden - AKO\n\t*\t\tVersion 5300 \n\t*\t\t\t- Added logic to determine if select value or text is equal to the value to set, if it is, we don't bother proccessing the select - AKO\n\t*\t\tVersion 5305 \n\t*\t\t\t- Added logic to only fire change event if the element was actually filled - AKO\n\t*\t\tVersion 5307 \n\t*\t\t\t- Three new functions added: getFormData, formDataExists, validateFormFill. These were added to simplify the process of determinig whether form data exists, to extract the form data, and to validate a succesfull fill, respectivley. - AKO\n\t*\t\tVersion 5329\n\t*\t\t\t- Many improvments to the functions that determine if data exists, gets said data, and validates a successfull fill. Also added cctype format \"num4\", and country format \"option\" - AKO \n\t*\t\tVersions 5329 - 5353\n\t*\t\t\t- Improved functions that determine if data exists, gets the data, and validates fill. Also refactored logic a bit to better handle radio button filling & radio button fill validation - AKO\n\t*\t\tVersion 5354\n\t*\t\t\t- Added CCType format \"num5\"\n\t*\t\tVersion 5355\n\t*\t\t\t- Added CCType format \"CC_type\"\n\t*\t\tVersion 5358 \n\t*\t\t\t- Added CCType format \"num6\"\n\t*\t\tVersion 5359 \n\t*\t\t\t- Fixed an error in spelling, \"valepassed\", to \"valuepassed\", line 807\n\t*\t\tVersion 5360 \n\t*\t\t\t- Added CCType format \"CT MasterCard\"\n\t*\t\tVersion 5361\n\t*\t\t\t- Added CCType format \"C\"\n\t*\t\tVersion 5362\n\t*\t\t\t- Corrected syntax error on line 564, was missing a colon between a key-value pair\n\t*\t\tVersion 5363 \n\t*\t\t\t- Added CCType format \"CT Discover\"\n\t*\t\tVersion 5364 \n\t*\t\t\t- Commented out a KynetxFormDebug call on line 1044 in preperation for deployment\n\t*\t\tVersion 5365\n\t*\t\t\t- Added a value for discover for format \"CC_type\", \"CC_disc\"\n\t*\t\tVersions 5366 - 5398\n\t*\t\t\t- Various debugging done to determine cause of issues on sites. With this debugging code, we succesfully resolved issues with yoox.com, coach.com, and safeway.com This debugging code has since been removed from the code.\n\t*\t\tVersion 5399\n\t*\t\t\t- Added a utility function, detectFormValues, to assist in debugging of forms. This helped resolve hottopic.com\n\t*\t\tVersion 5400\n\t*\t\t\t- Added CC number format \"dashed\" for iherb.com.\n\t*\t\tVersions 5401-5409\n\t*\t\t\t- General cleanup of code\n\t*\t\tVersion 5410\n\t*\t\t\t- Updates to changelog\n\t*\t\tVersion 5456\n\t*\t\t\t- Refactored to fix shoes.com due to having an AJAX form change.\n\t*\t\t\t- Added \"no data\" error to be passed on. Should fix the \"-\" being reported as the error fields.\n\t*/\n\n\t// Set up\n\n\tKOBJ.a41x88 = KOBJ.a41x88 || {};\nKOBJ.a41x88.forms = KOBJ.a41x88.forms || [];\n\n// Custom callback function which allows additional parameters.\n\nKOBJ.ff_logger = function(type,txn_id,url,element,sense,rule,rid,callback_info){\n\tvar logger_url= \"https://\" + KOBJ.callback_host+ \"/callback/\"+rid+\"?jsoncb=?&\"+rid+\"&type=\"+type+\"&txn_id=\"+txn_id+\"&rule=\"+rule;\n\tif(url){\n\t\tlogger_url+=\"&caller=\"+escape(url);\n\t}\n\tif(rid){\n\t\tlogger_url+=\"&rid=\"+rid;\n\t}\n\tif(element){\n\t\tlogger_url+=\"&element=\"+element;\n\t}\n\tif(sense){\n\t\tlogger_url+=\"&sense=\"+sense;\n\t}\n\tif(callback_info){\n\t\tlogger_url+=\"&message=\"+escape(callback_info);\n\t}\n\t$KOBJ.getJSON(logger_url,function(){});\n};\n\n/* Start of the formatting plugin */\n\n(function ($) {\n $.format = (function () {\n\n\t var parseMonth = function(value){\n\n\t switch(value){\n\t case \"Jan\":\n\t return \"01\";\n\t break;\n\t case \"Feb\":\n\t return \"02\";\n\t break;\n\t case \"Mar\":\n\t return \"03\";\n\t break;\n\t case \"Apr\":\n\t return \"04\";\n\t break;\n\t case \"May\":\n\t return \"05\";\n\t break;\n\t case \"Jun\":\n\t\t return \"06\";\n\t break;\n\t case \"Jul\":\n\t\t return \"07\";\n\t break;\n\t case \"Aug\":\n\t\t return \"08\";\n\t break;\n\t case \"Sep\":\n\t\t return \"09\";\n\t break;\n\t case \"Oct\":\n\t\t return \"10\";\n\t break;\n\t case \"Nov\":\n\t\t return \"11\";\n\t break;\n\t case \"Dec\":\n\t\t return \"12\";\n\t break;\n\t\t default:\n\t return value;\n\t break;\n\t }\n\t };\n\n\t var parseTime = function(value){\n\t\t var retValue = value;\n\t\t if(retValue.indexOf(\".\") != -1){\n\t\t\t retValue =  retValue.substring(0, retValue.indexOf(\".\"));\n\t\t }\n\n\t\t var values3 = retValue.split(\":\");\n\n\t\t if(values3.length == 3){\n\t\t\t hour\t\t= values3[0];\n\t\t\t minute\t\t= values3[1];\n\t\t\t second\t\t= values3[2];\n\n\t\t\t return {\ntime: retValue,\n\t      hour: hour,\n\t      minute: minute,\n\t      second: second\n\t\t\t };\n\t\t } else {\n\t\t\t return {\ntime: \"\",\n\t      hour: \"\",\n\t      minute: \"\",\n\t      second: \"\"\n\t\t\t };\n\t\t }\n\t };\n\n\t return {\ndate: function(value, format){\n\t      try{\n\t\t      var values = value.split(\" \");\n\t\t      var year \t\t= null;\n\t\t      var month \t\t= null;\n\t\t      var dayOfMonth \t= null;\n\t\t      var time \t\t= null;\n\n\t\t      switch(values.length){\n\t\t\t      case 6:\n\t\t\t\t      year \t\t= values[5];\n\t\t\t\t      month \t\t= parseMonth(values[1]);\n\t\t\t\t      dayOfMonth \t= values[2];\n\t\t\t\t      time\t\t= parseTime(values[3]);\n\t\t\t\t      break;\n\t\t\t      case 2:\n\t\t\t\t      var values2 = values[0].split(\"-\");\n\t\t\t\t      year \t\t= values2[0];\n\t\t\t\t      month \t\t= values2[1];\n\t\t\t\t      dayOfMonth \t= values2[2];\n\t\t\t\t      time \t\t= parseTime(values[1]);\n\t\t\t\t      break;\n\t\t\t      case 1:\n\t\t\t\t      var dates = value.split(\"/\");\n\t\t\t\t      year = dates[1];\n\t\t\t\t      month = dates[0];\n\t\t\t\t      dayOfMonth = \"00\";\n\t\t\t\t      time = parseTime(\"00:00:00.000\");\n\t\t\t\t      break;\n\t\t\t      default:\n\t\t\t\t      return value;\n\t\t\t\t      break;\n\t\t      }\n\n\n\t\t      var pattern \t= \"\";\n\t\t      var retValue \t= \"\";\n\n\t\t      for(i = 0; i < format.length; i++){\n\t\t\t      var currentPattern = format.charAt(i);\n\t\t\t      pattern += currentPattern;\n\t\t\t      switch(pattern){\n\t\t\t\t      case \"dd\":\n\t\t\t\t\t      retValue += dayOfMonth;\n\t\t\t\t      pattern   = \"\";\n\t\t\t\t      break;\n\t\t\t\t      case \"mM\":\n\t\t\t\t\t      retValue += month.replace(/0/,\"\");\n\t\t\t\t      patern = \"\";\n\t\t\t\t      break;\n\t\t\t\t      case \"MM\":\n\t\t\t\t\t      retValue += month;\n\t\t\t\t      pattern   = \"\";\n\t\t\t\t      break;\n\t\t\t\t      case \"yyyy\":\n\t\t\t\t\t      retValue += year;\n\t\t\t\t      pattern   = \"\";\n\t\t\t\t      break;\n\t\t\t\t      case \"HH\":\n\t\t\t\t\t      retValue += time.hour;\n\t\t\t\t      pattern   = \"\";\n\t\t\t\t      break;\n\t\t\t\t      case \"hh\":\n\t\t\t\t\t      retValue += time.hour;\n\t\t\t\t      pattern   = \"\";\n\t\t\t\t      break;\n\t\t\t\t      case \"mm\":\n\t\t\t\t\t      retValue += time.minute;\n\t\t\t\t      pattern   = \"\";\n\t\t\t\t      break;\n\t\t\t\t      case \"ss\":\n\t\t\t\t\t      retValue += time.second;\n\t\t\t\t      pattern   = \"\";\n\t\t\t\t      break;\n\t\t\t\t      case \" \":\n\t\t\t\t\t      retValue += currentPattern;\n\t\t\t\t      pattern   = \"\";\n\t\t\t\t      break;\n\t\t\t\t      case \"/\":\n\t\t\t\t\t      retValue += currentPattern;\n\t\t\t\t      pattern   = \"\";\n\t\t\t\t      break;\n\t\t\t\t      case \":\":\n\t\t\t\t\t      retValue += currentPattern;\n\t\t\t\t      pattern   = \"\";\n\t\t\t\t      break;\n\t\t\t\t      default:\n\t\t\t\t      if(pattern.length == 2 && pattern.indexOf(\"y\") != 0){\n\t\t\t\t\t      retValue += pattern.substring(0, 1);\n\t\t\t\t\t      pattern = pattern.substring(1, 2);\n\t\t\t\t      } else if((pattern.length == 3 && pattern.indexOf(\"yyy\") == -1)){\n\t\t\t\t\t      pattern   = \"\";\n\t\t\t\t      }\n\t\t\t\t      break;\n\t\t\t      }\n\t\t      }\n\t\t      return retValue;\n\t      } catch(e) {\n\t\t      return value;\n\t      }\n      }\n\t };\n })();\n}($KOBJ));\n\n/* End of formatting plugin */\n\n\n\n\n/* Storage for states... */\n\n\nKOBJ.stateMap = {\n\n\t\"AL\":\"ALABAMA\",\n\n\t\"AK\":\"ALASKA\",\n\n\t\"AS\":\"AMERICAN SAMOA\",\n\n\t\"AZ\":\"ARIZONA\",\n\n\t\"AR\":\"ARKANSAS\",\n\n\t\"CA\":\"CALIFORNIA\",\n\n\t\"CO\":\"COLORADO\",\n\n\t\"CT\":\"CONNECTICUT\",\n\n\t\"DE\":\"DELAWARE\",\n\n\t\"DC\":\"DISTRICT OF COLUMBIA\",\n\n\t\"FM\":\"FEDERATED STATES OF MICRONESIA\",\n\n\t\"FL\":\"FLORIDA\",\n\n\t\"GA\":\"GEORGIA\",\n\n\t\"GU\":\"GUAM\",\n\n\t\"HI\":\"HAWAII\",\n\n\t\"ID\":\"IDAHO\",\n\n\t\"IL\":\"ILLINOIS\",\n\n\t\"IN\":\"INDIANA\",\n\n\t\"IA\":\"IOWA\",\n\n\t\"KS\":\"KANSAS\",\n\n\t\"KY\":\"KENTUCKY\",\n\n\t\"LA\":\"LOUISIANA\",\n\n\t\"ME\":\"MAINE\",\n\n\t\"MH\":\"MARSHALL ISLANDS\",\n\n\t\"MD\":\"MARYLAND\",\n\n\t\"MA\":\"MASSACHUSETTS\",\n\n\t\"MI\":\"MICHIGAN\",\n\n\t\"MN\":\"MINNESOTA\",\n\n\t\"MS\":\"MISSISSIPPI\",\n\n\t\"MO\":\"MISSOURI\",\n\n\t\"MT\":\"MONTANA\",\n\n\t\"NE\":\"NEBRASKA\",\n\n\t\"NV\":\"NEVADA\",\n\n\t\"NH\":\"NEW HAMPSHIRE\",\n\n\t\"NJ\":\"NEW JERSEY\",\n\n\t\"NM\":\"NEW MEXICO\",\n\n\t\"NY\":\"NEW YORK\",\n\n\t\"NC\":\"NORTH CAROLINA\",\n\n\t\"ND\":\"NORTH DAKOTA\",\n\n\t\"MP\":\"NORTHERN MARIANA ISLANDS\",\n\n\t\"OH\":\"OHIO\",\n\n\t\"OK\":\"OKLAHOMA\",\n\n\t\"OR\":\"OREGON\",\n\n\t\"PW\":\"PALAU\",\n\n\t\"PA\":\"PENNSYLVANIA\",\n\n\t\"PR\":\"PUERTO RICO\",\n\n\t\"RI\":\"RHODE ISLAND\",\n\n\t\"SC\":\"SOUTH CAROLINA\",\n\n\t\"SD\":\"SOUTH DAKOTA\",\n\n\t\"TN\":\"TENNESSEE\",\n\n\t\"TX\":\"TEXAS\",\n\n\t\"UT\":\"UTAH\",\n\n\t\"VT\":\"VERMONT\",\n\n\t\"VI\":\"VIRGIN ISLANDS\",\n\n\t\"VA\":\"VIRGINIA\",\n\n\t\"WA\":\"WASHINGTON\",\n\n\t\"WV\":\"WEST VIRGINIA\",\n\n\t\"WI\":\"WISCONSIN\",\n\n\t\"WY\":\"WYOMING\"\n\n};\n\n/* And now country */\n\nKOBJ.countryCodes = {\n\n\t\"USA\":{\n\t\t\"Long\":\"United States of America\",\n\t\t\"Short\":\"United States\",\n\t\t\"CC\":\"US\",\n\t\t\"CCC\":\"USA\",\n\t\t\"cc\":\"us\",\n\t\t\"ccc\":\"usa\",\n\t\t\"noSpace\":\"UnitedStates\",\n\t\t\"option\":\"USAOption\"\n\t},\n\n\t\"US\":{\n\t\t\"Long\":\"United States of America\",\n\t\t\"Short\":\"United States\",\n\t\t\"CC\":\"US\",\n\t\t\"CCC\":\"USA\",\n\t\t\"cc\":\"us\",\n\t\t\"ccc\":\"usa\",\n\t\t\"noSpace\":\"UnitedStates\",\n\t\t\"option\":\"USAOption\"\n\t}\n\n};\n\n/* And credit cards */\n\nKOBJ.creditCards = {\n\n\t\"Visa\": {\n\t\t\"CT\":\"VI\",\n\t\t\"VC\":\"VC\",\n\t\t\"C\":\"V\",\n\t\t\"CCType\":\"Visa\",\n\t\t\"CCType w/ AMEX\":\"Visa\",\n\t\t\"CCTYPE\":\"VISA\",\n\t\t\"VS\":\"VS\",\n\t\t\"CC Type\":\"Visa\",\n\t\t\"CC_type\":\"CC_visa\",\n\t\t\"amex\":\"visa\",\n\t\t\"CCType w/ AmericanExpress\":\"Visa\",\n\t\t\"CCType w/ AMEX and Master Card\":\"Visa\",\n\t\t\"CT MasterCard\":\"VI\",\n\t\t\"CT Discover\":\"VI\",\n\t\t\"num\":\"1\",\n\t\t\"num2\":\"5\",\n\t\t\"num3\":\"2\",\n\t\t\"num4\":\"1\",\n\t\t\"num5\":\"6\",\n\t\t\"num6\":\"4\"\n\t},\n\n\t\"American Express\": {\n\t\t\"CT\":\"AX\",\n\t\t\"VC\":\"AX\",\n\t\t\"C\":\"A\",\n\t\t\"CCType\":\"American Express\",\n\t\t\"CCType w/ AMEX\":\"AMEX\",\n\t\t\"CCTYPE\":\"AMERICAN EXPRESS\",\n\t\t\"VS\":\"AE\",\n\t\t\"CC Type\":\"American Express\",\n\t\t\"CC_type\":\"CC_amex\",\n\t\t\"amex\":\"amex\",\n\t\t\"CCType w/ AmericanExpress\":\"AmericanExpress\",\n\t\t\"CCType w/ AMEX and Master Card\":\"AMEX\",\n\t\t\"CT MasterCard\":\"AX\",\n\t\t\"CT Discover\":\"AX\",\n\t\t\"num\":\"4\",\n\t\t\"num2\":\"8\",\n\t\t\"num3\":\"1\",\n\t\t\"num4\":\"3\",\n\t\t\"num5\":\"\",\n\t\t\"num6\":\"3\"\n\t},\n\n\t\"Discover\": {\n\t\t\"CT\":\"DI\",\n\t\t\"VC\":\"VC\",\n\t\t\"C\":\"D\",\n\t\t\"CCType\":\"Discover\",\n\t\t\"CCType w/ AMEX\":\"Discover\",\n\t\t\"CCTYPE\":\"DISCOVER\",\n\t\t\"VS\":\"DC\",\n\t\t\"CC Type\":\"Discover\",\n\t\t\"CC_type\":\"CC_disc\",\n\t\t\"amex\":\"disc\",\n\t\t\"CCType w/ AmericanExpress\":\"Discover\",\n\t\t\"CCType w/ AMEX and Master Card\":\"Discover\",\n\t\t\"CT MasterCard\":\"DI\",\n\t\t\"CT Discover\":\"DS\",\n\t\t\"num\":\"3\",\n\t\t\"num2\":\"3\",\n\t\t\"num3\":\"8\",\n\t\t\"num4\" : \"\",\n\t\t\"num5\" : \"\",\n\t\t\"num6\":\"6\"\n\t},\n\n\t\"MasterCard\": {\n\t\t\"CT\":\"MC\",\n\t\t\"VC\":\"VC\",\n\t\t\"C\":\"M\",\n\t\t\"CCType\":\"MasterCard\",\n\t\t\"CCType w/ AMEX\":\"MasterCard\",\n\t\t\"CCTYPE\":\"MASTERCARD\",\n\t\t\"VS\":\"MC\",\n\t\t\"CC Type\":\"Master Card\",\n\t\t\"CC_type\":\"CC_master\",\n\t\t\"amex\":\"mc\",\n\t\t\"CCType w/ AmericanExpress\":\"MasterCard\",\n\t\t\"CCType w/ AMEX and Master Card\":\"Master Card\",\n\t\t\"CT MasterCard\":\"CA\",\n\t\t\"CT Discover\":\"CA\",\n\t\t\"num\":\"2\",\n\t\t\"num2\":\"7\",\n\t\t\"num3\":\"4\",\n\t\t\"num4\":\"2\",\n\t\t\"num5\":\"5\",\n\t\t\"num6\":\"5\"\n\t}\n\n};\n\nKOBJ.creditCards[\"1\"] = KOBJ.creditCards[\"Visa\"];\nKOBJ.creditCards[\"2\"] = KOBJ.creditCards[\"American Express\"];\t\nKOBJ.creditCards[\"3\"] = KOBJ.creditCards[\"Discover\"];\nKOBJ.creditCards[\"4\"] = KOBJ.creditCards[\"MasterCard\"];\n\n/* And dates. This isn't being used currently. */\n\nKOBJ.dates = {\n\t\"months\":{\n\t\t\"01\":{\"Mon\":\"Jan\"},\n\t\t\"02\":{\"Mon\":\"Feb\"},\n\t\t\"03\":{\"Mon\":\"Mar\"},\n\t\t\"04\":{\"Mon\":\"Apr\"},\n\t\t\"05\":{\"Mon\":\"May\"},\n\t\t\"06\":{\"Mon\":\"Jun\"},\n\t\t\"07\":{\"Mon\":\"Jul\"},\n\t\t\"08\":{\"Mon\":\"Aug\"},\n\t\t\"09\":{\"Mon\":\"Sep\"},\n\t\t\"10\":{\"Mon\":\"Oct\"},\n\t\t\"11\":{\"Mon\":\"Nov\"},\n\t\t\"12\":{\"Mon\":\"Dec\"}\n\t}\n};\n\n/*\n   Functions to look up the different datatypes.\n   I want to consolidate these into one function\n   which takes an additional parameter which determines\n   which data to look at...\n */\n\nKOBJ.STToState = function(val){\n\tvar lookedUp = KOBJ.stateMap[val.toUpperCase()];\n\tif(lookedUp){\n\t\treturn lookedUp;\n\t}\n\treturn val;\n};\n\nKOBJ.countryCodeToCountry = function(val,format){\n\tvar lookedUp = KOBJ.countryCodes[val][format];\n\n\tif(lookedUp){\n\t\treturn lookedUp;\n\t}\n\treturn val;\n};\n\nKOBJ.creditCardFormatter = function(value, format){\n\tvar lookedUp = KOBJ.creditCards[value][format];\n\n\tif(lookedUp){\n\t\treturn lookedUp;\n\t}\n\treturn val;\n};\n\nKOBJ.getMonthName = function(value,format) {\n\tvar lookedUp = KOBJ.dates.months[value.split(\"/\")[0]][format];\n\n\tif(lookedUp){\n\t\treturn lookedUp;\n\t}\n\treturn val;\n};\n\n// Inserts the map into an array.\n\nKOBJ.setFormMaps = function(mapToPush,config){\n\tmapToPush = {\"map\":mapToPush,\"config\":config};\n\tKOBJ.a41x88.forms.push(mapToPush);\n};\n\n// Defaults.\nKOBJ.fillFormsDefault = {\n\t\"fillCSS\": {},\n\t\"highlight-color\":\"#FFFFCC\",\n\t\"className\":\"VisaRightCliqHighLight\",\n\t\"cburl\":\"https://fmm.kynetx.com/reporterror\"\n};\n\n/*\n   Takes data and format and fetches the correct data.\n   I may eventually consolidate the KOBJ.countryCodeToCountry, etc.\n   into this function.\n */\n\nKOBJ.formatData = function(formatpassed,valuepassed){\n\tvar valToBe, tempVal;\n\tvaluepassed = String(valuepassed);\n\tswitch(formatpassed){\n\t\tcase \"none\":\n\t\t\tvalToBe = valuepassed;\n\t\tbreak;\n\n\t\tcase \"area\":\n\t\t\tvalToBe = valuepassed.slice(0,3);\n\t\tbreak;\n\n\t\tcase \"first-3\":\n\t\t\tvalToBe = valuepassed.slice(3,6);\n\t\tbreak;\n\n\t\tcase \"last-4\":\n\t\t\tvalToBe = valuepassed.slice(6,10);\n\t\tbreak;\n\n\t\tcase \"last-7\":\n\t\t\tvalToBe = valuepassed.slice(3,10);\n\t\tbreak;\n\n\t\tcase \"(nnn)nnn-nnnn\":\n\t\t\tvalToBe = \"(\"+valuepassed.slice(0,3)+\")\"+valuepassed.slice(3,6)+\"-\"+valuepassed.slice(6,10);\n\t\tbreak;\n\n\t\tcase \"nnn-nnn-nnnn\":\n\t\t\tvalToBe = valuepassed.slice(0,3)+\"-\"+valuepassed.slice(3,6)+\"-\"+valuepassed.slice(6,10);\n\t\tbreak;\n\n\t\tcase \"dashed\":\n\t\t\tvalToBe = valuepassed.slice(0,4)+\"-\"+valuepassed.slice(4,8)+\"-\"+valuepassed.slice(8,12)+\"-\"+valuepassed.slice(12,16);\n\t\tbreak;\n\n\t\tcase \"all\":\n\t\t\tvalToBe = valuepassed;\n\t\tbreak;\n\n\t\tcase \"ST\":\n\t\t\tvalToBe = valuepassed;\n\t\tbreak;\n\n\t\tcase \"State\":\n\t\t\tvalToBe = KOBJ.STToState(valuepassed);\n\t\tbreak;\n\n\t\tcase \"ST - State\":\n\t\t\tvalToBe = valuepassed + ' - ' + KOBJ.STToState(valuepassed);\n\t\tbreak;\n\n\t\tcase \"STATE\":\n\t\t\tvalToBe = KOBJ.STToState(valuepassed).toUpperCase();\n\t\tbreak;\n\n\t\tcase \"Long\":\n\t\t\tvalToBe = KOBJ.countryCodeToCountry(valuepassed,formatpassed);\n\t\tbreak;\n\n\t\tcase \"Short\":\n\t\t\tvalToBe = KOBJ.countryCodeToCountry(valuepassed,formatpassed);\n\t\tbreak;\n\n\t\tcase \"CC\":\n\t\t\tvalToBe = KOBJ.countryCodeToCountry(valuepassed,formatpassed);\n\t\tbreak;\n\n\t\tcase \"CCC\":\n\t\t\tvalToBe = KOBJ.countryCodeToCountry(valuepassed,formatpassed);\n\t\tbreak;\n\n\t\tcase \"noSpace\":\n\t\t\tvalToBe = KOBJ.countryCodeToCountry(valuepassed, formatpassed);\n\t\tbreak;\n\n\t\tcase \"cc\":\n\t\t\tvalToBe = KOBJ.countryCodeToCountry(valuepassed,formatpassed);\n\t\tbreak;\n\n\t\tcase \"ccc\":\n\t\t\tvalToBe = KOBJ.countryCodeToCountry(valuepassed,formatpassed);\n\t\tbreak;\n\n\t\tcase \"option\":\n\t\t\tvalToBe = KOBJ.countryCodeToCountry(valuepassed, formatpassed);\n\t\tbreak;\n\n\t\tcase \"CCType\":\n\t\t\tvalToBe = KOBJ.creditCardFormatter(valuepassed,formatpassed);\n\t\tbreak;\n\n\t\tcase \"CCType w/ AMEX\":\n\t\t\tvalToBe = KOBJ.creditCardFormatter(valuepassed,formatpassed);\n\t\tbreak;\n\n\t\tcase \"CC Type\":\n\t\t\tvalToBe = KOBJ.creditCardFormatter(valuepassed,formatpassed);\n\t\tbreak;\n\n\t\tcase \"CC_type\":\n\t\t\tvalToBe = KOBJ.creditCardFormatter(valuepassed, formatpassed);\n\t\tbreak;\n\n\t\tcase \"CCTYPE\":\n\t\t\tvalToBe = KOBJ.creditCardFormatter(valuepassed,formatpassed);\n\t\tbreak;\n\n\t\tcase \"CT\":\n\t\t\tvalToBe = KOBJ.creditCardFormatter(valuepassed,formatpassed);\n\t\tbreak;\n\n\t\tcase \"VC\":\n\t\t\tvalToBe = KOBJ.creditCardFormatter(valuepassed,formatpassed);\n\t\tbreak;\n\n\t\tcase \"VS\":\n\t\t\tvalToBe = KOBJ.creditCardFormatter(valuepassed,formatpassed);\n\t\tbreak;\n\n\t\tcase \"C\":\n\t\t\tvalToBe = KOBJ.creditCardFormatter(valuepassed, formatpassed);\n\t\tbreak;\n\n\t\tcase \"amex\":\n\t\t\tvalToBe = KOBJ.creditCardFormatter(valuepassed,formatpassed);\n\t\tbreak;\n\n\t\tcase \"CCType w/ AmericanExpress\":\n\t\t\tvalToBe = KOBJ.creditCardFormatter(valuepassed,formatpassed);\n\t\tbreak;\n\n\t\tcase \"CCType w/ AMEX and Master Card\":\n\t\t\tvalToBe = KOBJ.creditCardFormatter(valuepassed,formatpassed);\n\t\tbreak;\n\n\t\tcase \"CT MasterCard\":\n\t\t\tvalToBe = KOBJ.creditCardFormatter(valuepassed, formatpassed);\n\t\tbreak;\n\n\t\tcase \"CT Discover\":\n\t\t\tvalToBe = KOBJ.creditCardFormatter(valuepassed, formatpassed);\n\t\tbreak;\n\n\t\tcase \"num\":\n\t\t\tvalToBe = KOBJ.creditCardFormatter(valuepassed,formatpassed);\n\t\tbreak;\n\n\t\tcase \"num2\":\n\t\t\tvalToBe = KOBJ.creditCardFormatter(valuepassed,formatpassed);\n\t\tbreak;\t\n\n\t\tcase \"num3\":\n\t\t\tvalToBe = KOBJ.creditCardFormatter(valuepassed,formatpassed);\n\t\tbreak;\t\n\n\t\tcase \"num4\":\n\t\t\tvalToBe = KOBJ.creditCardFormatter(valuepassed, formatpassed);\n\t\tbreak;\n\n\t\tcase \"num5\":\n\t\t\tvalToBe = KOBJ.creditCardFormatter(valuepassed, formatpassed);\n\t\tbreak;\n\n\t\tcase \"num6\":\n\t\t\tvalToBe = KOBJ.creditCardFormatter(valuepassed, formatpassed);\n\t\tbreak;\n\n\t\tcase \"MMyy\":\n\t\t\tvalToBe = $KOBJ.format.date(valuepassed,\"MM\") + $KOBJ.format.date(valuepassed,\"yyyy\").slice(2);\n\t\tbreak;\n\n\t\tcase \"yy\":\n\t\t\tvalToBe = $KOBJ.format.date(valuepassed,\"yyyy\").slice(2,4);\n\t\tbreak;\n\n\t\tcase \"y,yyy\":\n\t\t\ttempVal = $KOBJ.format.date(valuepassed,\"yyyy\");\n\t\tvalToBe = tempVal.slice(0,1) + ',' + tempVal.slice(1);\n\t\tbreak;\n\n\t\tcase \"mM\":\n\t\t\ttempVal = $KOBJ.format.date(valuepassed,\"MM\");\n\t\tif(tempVal.charAt(0) == \"0\"){\n\t\t\tvalToBe = tempVal.charAt(1);\n\t\t} else {\n\t\t\tvalToBe = tempVal;\n\t\t}\n\t\tbreak;\n\n\t\tcase \"Mon\":\n\t\t\tvalToBe = KOBJ.getMonthName(valuepassed,formatpassed);\n\t\tbreak;\n\n\t\tcase \"first-group\":\n\t\t\tvalToBe = valuepassed.slice(0,4);\n\t\tbreak;\n\n\t\tcase \"second-group\":\n\t\t\tvalToBe = valuepassed.slice(4,8);\n\t\tbreak;\n\n\t\tcase \"third-group\":\n\t\t\tvalToBe = valuepassed.slice(8,12);\n\t\tbreak;\n\n\t\tcase \"last-group\":\n\t\t\tvalToBe = valuepassed.slice(12);\n\t\tbreak;\n\n\t\tcase \"fullname\":\n\t\t\tvalToBe = valuepassed;\n\t\tbreak;\n\n\t\tdefault:\n\t\tvalToBe = $KOBJ.format.date(valuepassed,formatpassed);\n\t\tbreak;\n\t}\n\n\tif(valToBe){\n\t\treturn valToBe;\n\t}\n\treturn false;\n};\n\nKOBJ.detectFormValues = function() {\n\t$K(\"input, select\").each(function (v) { KynetxFormDebug(\"dd - \" + $K(this).val() + \"\\n\"); });\n};\n\n// This function allows me to trigger javascript events from within Visa's Sandbok.\nKOBJ.fireEvent = function(element,event,keycode){\n\t// Get the DOM element\n\telement = $KOBJ(element)[0];\n\n\t// KOBJ.document is used so that the event is on the correct document.\n\tif(KOBJ.document.createEvent){\n\t\t// events for firefox + others\n\t\tvar evt = KOBJ.document.createEvent(\"HTMLEvents\");\n\n\t\tevt.initEvent(event, true, true ); // event type,bubbling,cancelable\n\t\treturn !element.dispatchEvent(evt);\n\t} else if (KOBJ.document.createEventObject){\n\t\t// dispatch for IE\n\t\tvar evt = KOBJ.document.createEventObject();\n\n\t\treturn element.fireEvent('on'+event,evt);\n\t} else {\n\t\tthrow \"Couldn't fire event\" + event;\n\t}\n};\n\n// Determines if there is data to fill the form element with \n\nKOBJ.formDataExists = function(data, keys) {\n\tvar dataExists = false;\n\n\t$KOBJ.each(keys, function() {\n\t\t\tvar key = this;\n\t\t\tif(typeof(data[key]) === \"undefined\") {\n\t\t\tdataExists = false;\n\t\t\treturn false;\n\t\t\t} else {\n\t\t\tdata = data[key];\n\t\t\tdataExists = true;\n\t\t\t}\n\t\t\t});\n\n\treturn dataExists;\n};\n\n// get the data to fill the form element with\n\nKOBJ.getFormData = function(data, keys) {\n\t$KOBJ.each(keys, function() {\n\t\t\tvar key = this;\n\t\t\tdata = data[key]; \n\t\t\t});\n\treturn data;\n};\n\n// function to determine whether or not the form element filled as expected\n\nKOBJ.validateFormFill = function(actual, expected) {\n\tif (!(actual === expected || actual.search(new RegExp(expected, \"i\")) > -1)) {\n\t\treturn false;\n\t} else {\n\t\treturn true;\n\t}\n};\n\n\n// Coverts JS objects to CSS.\nKOBJ.objToCSS = function(obj){\n\tif(typeof(obj)===\"object\"){\n\t\tvar styleStr = \"{\";\n\t\t$KOBJ.each(obj,function(key,value){\n\t\t\t\tstyleStr += key + \":\" + value + \";\"\n\t\t\t\t});\n\t\tstyleStr += \"}\";\n\t\treturn styleStr;\n\t}\n\treturn \"{}\";\n};\n\n// Puts the CSS into the page so that highlighting can occur. Adapted from the original KOBJ.css.\n\nKOBJ.css = function(css,doc){\n\t// Make sure that doc is the right one.\n\tdoc = doc ? doc : KOBJ.document;\n\tvar head=doc.getElementsByTagName('head')[0];\n\tvar style=doc.createElement('style');\n\tvar rules=doc.createTextNode(css);\n\tstyle.type='text/css';\n\tstyle.id='KOBJ_stylesheet';\n\tvar KOBJstyle=doc.getElementById('KOBJ_stylesheet');\n\tif(KOBJstyle==null){\n\t\tif(style.styleSheet){\n\t\t\tstyle.styleSheet.cssText=rules.nodeValue;\n\t\t} else {\n\t\t\tstyle.appendChild(rules);\n\t\t}\n\n\t\thead.appendChild(style);\n\t} else {\n\t\tif(KOBJstyle.styleSheet){\n\t\t\tKOBJstyle.styleSheet.cssText+=rules.nodeValue;\n\t\t} else {\n\t\t\tKOBJstyle.appendChild(rules);\n\t\t}\n\t}\n};\n\n// The main function. Takes data from Visa and fills the forms with said data.\nKOBJ.fillForms = function(formData, configuration){\n\n\tvar defaults = $KOBJ.extend(true, {}, KOBJ.fillFormsDefault);\n\n\t// Extends the configuration object, defaults.\n\tif(typeof(configuration) === \"object\"){\n\t\t$KOBJ.extend(true, defaults, configuration);\n\t}\n\n\t// Set highlight color\n\tif(defaults[\"highlight-color\"]){\n\t\tdefaults.fillCSS[\"background-color\"] = defaults[\"highlight-color\"] + \"!important\";\n\t}\n\n\tvar maxLengthURL = KOBJ.maxURLLength;\n\n\t// Get the last item stuck into the array\n\tvar forms = KOBJ.a41x88.forms[KOBJ.a41x88.forms.length - 1];\n\tif(typeof forms.config === \"object\"){\n\t\t$KOBJ.extend(defaults,forms.config,true);\n\t}\n\n\t// Set data\n\tvar formMap = forms.map;\n\tvar stateArray = [];\n\tvar errorState, anyError = false;\n\n\t// Variables used for reporting\n\tvar wanted = 0;\n\tvar successes = 0;\n\tvar noData = 0;\n\tvar errors = 0;\n\n\t// TODO: Determine if we can use JSON.stringify here, as it will pretty print JSON for us\n\tKynetxFormDebug(\"Map: \" + $KOBJ.compactJSON(formMap) + \"\\nForm Data: \" + $KOBJ.compactJSON(formData));\n\n\t//Each over each of the maps in the formMap array\n\t$KOBJ.each(formMap,function (index, thismap) {\n\t\t\ttry{\n\n\t\t\tKynetxFormDebug(\"Trying to fill for object: \" + $KOBJ.compactJSON(thismap));\n\n\t\t\terrorState = false;\n\t\t\tvar selector = thismap.selector;\n\t\t\tvar iframe = thismap.iframe;\n\t\t\tvar frame = thismap.frame;\n\t\t\tvar mapTo = thismap.map;\n\t\t\tvar format = thismap.format;\n\t\t\t//var watchSel = thismap.watch;\n\t\t\tvar watchSelThingyMajig = thismap.watchSel;\n\t\t\tvar mapArray = mapTo.split(\".\");\n\n\t\t\tvar value;\n\n\t\t\tvar dataExists = false;\n\n\t\t\tif (format === \"fullname\") {\n\t\t\t\tif (KOBJ.formDataExists(formData,[mapArray[0],\"firstname\"]) && KOBJ.formDataExists(formData,[mapArray[0],\"lastname\"])) {\n\t\t\t\t\tdataExists = true;\n\t\t\t\t}Sel\n\t\t\t} else {\n\t\t\t\tif (KOBJ.formDataExists(formData, [mapArray[0], mapArray[1]])) {\n\t\t\t\t\tdataExists = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!dataExists) {\n\t\t\t\tthrow \"no data\";\n\t\t\t}\n\n\t\t\tif (format === \"fullname\") {\n\t\t\t\tvalue = String(KOBJ.getFormData(formData, [mapArray[0], \"firstname\"]) + \" \" + KOBJ.getFormData(formData, [mapArray[0], \"lastname\"])); \n\t\t\t} else {\n\t\t\t\tvalue = String(KOBJ.getFormData(formData, [mapArray[0], mapArray[1]]));\n\t\t\t}\n\n\t\t\tvar elementToModify;\n\t\t\tvar frameObj;\n\t\t\tvar doc = KOBJ.document;\n\n\t\t\tfunction getFrameDoc(selector, tryDoc){\n\n\t\t\t\tvar returnDoc,aDoc;\n\n\t\t\t\tif(!selector || !selector.length){ // If selector string is empty/undefined\n\t\t\t\t\treturn tryDoc;\n\t\t\t\t}\n\n\t\t\t\tvar selectorArray;\n\n\t\t\t\tif(typeof(selector) === \"string\"){\n\t\t\t\t\tselectorArray = selector.split(\"|\"); // Split the string. '|' (bar/pipe) is the delimiter I chose because as far as I know of, nothing uses it in jQuery, etc.\n\t\t\t\t} else if(typeof(selector) === \"object\"){\n\t\t\t\t\tselectorArray = selector; // If it is an array, just use that.\n\t\t\t\t}\n\n\t\t\t\t// Grab the frame out of the correct document.\n\t\t\t\tvar frame = $KOBJ(selectorArray[0],tryDoc);\n\n\t\t\t\tif(!frame.length){\n\t\t\t\t\tthrow \"Frame does not exist\";\n\t\t\t\t}\n\n\t\t\t\t// Get the document of the frame.\n\t\t\t\tif(frame[0].contentDocument){\n\t\t\t\t\taDoc = frame[0].contentDocument;\n\t\t\t\t} else if(wex && wex.getFrameContents(frame[0])){\n\t\t\t\t\taDoc = frame[0].contentDocument;\n\t\t\t\t}\n\n\t\t\t\t// Recurse. If selectorArray's length is one, selStr will be empty causing getFrameDoc to return aDoc.\n\t\t\t\tif(selectorArray.length){\n\t\t\t\t\treturnDoc = getFrameDoc(selectorArray.splice(1),aDoc);\n\t\t\t\t}\n\n\t\t\t\treturn returnDoc;\n\t\t\t}\n\n\t\t\t// Is there a frame or iframe set in the map?\n\t\t\tif(frame || iframe){\n\t\t\t\t// Use the (i)frame selector to get the (i)frame.\n\t\t\t\tif(frame){\n\t\t\t\t\tdoc = getFrameDoc(frame, KOBJ.document);\n\t\t\t\t} else if(iframe){\n\t\t\t\t\tdoc = getFrameDoc(iframe, KOBJ.document);\n\t\t\t\t}\n\t\t\t\telementToModify = $KOBJ(selector, doc);\n\t\t\t} else {\n\t\t\t\t// If there is no iframe, the just jQuerify the selector\n\t\t\t\telementToModify = $KOBJ(selector);\n\t\t\t}\n\n\t\t\t// If \"\" is passed in, the form is cleared and the highlighting removed. If it is undefined, \"no data\" is thrown.\n\n\t\t\tif(typeof(value) !== \"string\"){\n\t\t\t\tthrow \"no data\";\n\t\t\t}\n\n\t\t\t// There is data, so we want this form to be filled.\n\t\t\twanted++;\n\n\t\t\tif(!elementToModify || !elementToModify.length){\n\t\t\t\tthrow \"selector doesn't exist\";\n\t\t\t}\n\n\t\t\tif(format){\n\t\t\t\tKynetxFormDebug(\"format: \"+ format + \"\\n\" + \"value:\" + value);\n\t\t\t\t// Format the data correctly\n\t\t\t\tvalue = String(KOBJ.formatData(format,value));\n\t\t\t}\n\n\t\t\t// Insert the stylesheet into the correct place. doc will be the document for the (i)frame so that the CSS gets put into the right spot.\n\t\t\t// TODO: If there is an app already on page using CSS, the highlighting will not occur\n\t\t\tif(!$KOBJ(\"#KOBJ_stylesheet\",doc).length){\n\t\t\t\tKOBJ.css(\".\"+ defaults.className + \" \" + KOBJ.objToCSS(defaults.fillCSS) ,doc);\n\t\t\t\tKOBJ.a41x88.css = true;\n\t\t\t}\n\n\n\t\t\t// Checks to see if the formatting didn't cause value to be nonexistent.\n\t\t\tif(typeof(value) !== \"string\"){\n\t\t\t\tthrow \"value formatting was bad\";\n\t\t\t}\n\n\t\t\tvar addCSS = true;\n\n\t\t\tif(!thismap.no_click){\n\t\t\t\tKOBJ.fireEvent(elementToModify,\"click\");\n\t\t\t\tKOBJ.fireEvent(elementToModify,\"focus\");\n\t\t\t}\n\n\t\t\tvar typeOfElement = \"\";\n\n\t\t\t$KOBJ.each(elementToModify, function(index, testElement){\n\t\t\t\t\tif(!testElement.tagName){\n\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(testElement.tagName.toUpperCase() == \"INPUT\" && (testElement.type.toUpperCase() == \"HIDDEN\"  || testElement.type.toUpperCase() == \"TEXT\")){\n\t\t\t\t\ttypeOfElement = \"text\";\n\t\t\t\t\t} else if(testElement.tagName.toUpperCase() == \"SELECT\"){\n\t\t\t\t\ttypeOfElement = \"select\";\n\t\t\t\t\t} else if(testElement.tagName.toUpperCase() == \"INPUT\" && testElement.type.toUpperCase() == \"RADIO\"){\n\t\t\t\t\ttypeOfElement = \"radio\";\n\t\t\t\t\t} else if(testElement.tagName.toUpperCase() == \"DIV\"){\n\t\t\t\t\ttypeOfElement = \"div\";\n\t\t\t\t\t} else if(testElement.tagName.toUpperCase() == \"A\"){\n\t\t\t\t\ttypeOfElement = \"link\";\n\t\t\t\t\t} else {\n\t\t\t\t\ttypeOfElement = \"unknown\";\n\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\tvar changed = false;\n\n\t\t\tfunction fillClosure(selector){\n\n\t\t\t\tvar toReturn = function(){\n\t\t\t\t\tvar element = $KOBJ(selector,doc);\n\t\t\t\t\tif(typeOfElement == \"text\"){ // If the element is a normal text box, try normal stuff\n\t\t\t\t\t\telement.val(value);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t} else if(typeOfElement == \"select\"){ // If the element is a select, do drop down specialties\n\t\t\t\t\t\tvar done = false;\n\n\t\t\t\t\t\tKynetxFormDebug(\"Drop down specialties.\");\n\n\t\t\t\t\t\tvar selectedOpt = $KOBJ(\":selected\",element);\n\t\t\t\t\t\t// is there an option that is selected with the \"selected\" attribute by default, if so, look at both the text and value of that option and see if it matches the value we are wanting to set\n\t\t\t\t\t\tif (selectedOpt.length) {\n\t\t\t\t\t\t\tvar selectedOptText = String(selectedOpt.text().replace(/(?:^\\s+|^)(.*?)(?:\\s+$|$)/,\"$1\").toUpperCase());\n\t\t\t\t\t\t\tvar selectedOptValue = String(selectedOpt.attr(\"value\").toUpperCase());\n\n\t\t\t\t\t\t\t// is the currently selected option's text or value equal to the value that is to be set? If so, don't bother inspecting the select\n\t\t\t\t\t\t\tif(selectedOptValue === value.toUpperCase() || selectedOptText === value.toUpperCase()) {\n\t\t\t\t\t\t\t\tdone = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// There is no option that is selected with the \"selected\" attribute by default, so just look at the select element's value and see if it matches the value we are wanting to set\n\t\t\t\t\t\t\tvar selectVal = String(element.val().toUpperCase());\n\t\t\t\t\t\t\tif (selectVal === value.toUpperCase()) {\n\t\t\t\t\t\t\t\tdone = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(!done) {\n\t\t\t\t\t\t\t// If the value is exactly equal to an option's value in the select box\n\t\t\t\t\t\t\t$KOBJ.each($KOBJ(\"option\",element),function(){\n\t\t\t\t\t\t\t\t\tvar select = $KOBJ(this);\n\t\t\t\t\t\t\t\t\tvar selectVal = String(select.attr(\"value\"));\n\t\t\t\t\t\t\t\t\tvar text = select.text().replace(/(?:^\\s+|^)(.*?)(?:\\s+$|$)/,\"$1\").toUpperCase();\n\n\t\t\t\t\t\t\t\t\t// Calling .toUpperCase makes the check be case insensitive\n\t\t\t\t\t\t\t\t\tif(selectVal.toUpperCase() == value.toUpperCase() || text == value.toUpperCase()){\n\t\t\t\t\t\t\t\t\t$KOBJ(\":selected\", element).removeAttr(\"selected\");\n\t\t\t\t\t\t\t\t\tselect.attr(\"selected\",\"true\");\n\t\t\t\t\t\t\t\t\tKynetxFormDebug(\"Selected \" + text + \", either \" + text + \" or \" + selectVal + \" matched \" + value);\n\t\t\t\t\t\t\t\t\tdone = true;\n\t\t\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If the exact lookup failed, try a case insensitive regex.\n\t\t\t\t\t\tif(!done){\n\t\t\t\t\t\t\t$KOBJ.each($KOBJ(\"option\",element),function(){\n\t\t\t\t\t\t\t\t\tvar select = $KOBJ(this);\n\t\t\t\t\t\t\t\t\tvar selectVal = select.val();\n\t\t\t\t\t\t\t\t\tvar text = select.text().replace(/(?:^\\s+|^)(.*?)(?:\\s+$|$)/,\"$1\");\n\t\t\t\t\t\t\t\t\tvar regex = new RegExp(\"^\"+value+\"$\",\"i\");\n\t\t\t\t\t\t\t\t\tif(selectVal.search(regex) > -1 || text.search(regex) > -1){\n\t\t\t\t\t\t\t\t\t$KOBJ(\":selected\", element).removeAttr(\"selected\");\n\t\t\t\t\t\t\t\t\tselect.attr(\"selected\",\"true\");\n\t\t\t\t\t\t\t\t\tKynetxFormDebug(\"Selected \" + text + \", it has the regex \" + regex);\n\t\t\t\t\t\t\t\t\tdone = true;\n\t\t\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If the case insensitive regex failed, just look to see if an option's value contains the value wanted.\n\t\t\t\t\t\t// Catch all so that we may get it right. Selects Arkansas rather than Kansas, though.\n\t\t\t\t\t\tif(!done){\n\t\t\t\t\t\t\t$KOBJ.each($KOBJ(\"option\",element),function(){\n\t\t\t\t\t\t\t\t\tvar select = $KOBJ(this);\n\t\t\t\t\t\t\t\t\tvar selectVal = select.val();\n\t\t\t\t\t\t\t\t\tvar text = select.text().replace(/(?:^\\s+|^)(.*?)(?:\\s+$|$)/,\"$1\");\n\t\t\t\t\t\t\t\t\tvar regex = new RegExp(value,\"i\");\n\t\t\t\t\t\t\t\t\tif(selectVal.search(regex) > -1 || text.search(regex) > -1){\n\t\t\t\t\t\t\t\t\t$KOBJ(\":selected\", element).removeAttr(\"selected\");\n\t\t\t\t\t\t\t\t\tselect.attr(\"selected\",\"true\");\n\t\t\t\t\t\t\t\t\tKynetxFormDebug(\"Selected \" + text + \", it has the regex \" + regex);\n\t\t\t\t\t\t\t\t\tdone = true;\n\t\t\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// If the element is a radio button...\n\t\t\t\t\t} else if(typeOfElement == \"radio\"){\n\n\t\t\t\t\t\tKynetxFormDebug(\"Trying Radio Specialties\");\n\t\t\t\t\t\tvar regex = new RegExp(value,\"i\");\n\t\t\t\t\t\tvar done = false;\n\n\t\t\t\t\t\t// Check the radio button's value attributes\n\t\t\t\t\t\tif($K(element).length > 1){\n\t\t\t\t\t\t\t$K.each($K(element),function(){\n\t\t\t\t\t\t\t\t\tvar select = false;\n\t\t\t\t\t\t\t\t\tvar radio = $KOBJ(this);\n\n\t\t\t\t\t\t\t\t\t// If the value is the same as what we want or contains anything that we want, select it\n\t\t\t\t\t\t\t\t\tif(radio.attr(\"value\").toUpperCase() == value){\n\t\t\t\t\t\t\t\t\tselect = true;\n\t\t\t\t\t\t\t\t\t} else if(radio.attr(\"value\").search(regex) > -1){\n\t\t\t\t\t\t\t\t\tselect = true;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Return false to stop the loop.\n\t\t\t\t\t\t\t\t\tif(select){\n\t\t\t\t\t\t\t\t\t$KOBJ(element.selector+\":checked\").removeAttr(\"checked\");\n\t\t\t\t\t\t\t\t\tradio.attr(\"checked\",\"checked\");\n\t\t\t\t\t\t\t\t\tif(thismap.no_click) {\n\t\t\t\t\t\t\t\t\telement.each(function() {\n\t\t\t\t\t\t\t\t\t\tthis.onclick = null;\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tKOBJ.fireEvent(radio, \"click\");\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tdone = true;\n\t\t\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If the value attribute did not work, then look for images whose src, alt, or title attribute match the value.\n\t\t\t\t\t\tif(!done){\n\t\t\t\t\t\t\tvar toClick = $KOBJ(\"img\");\n\t\t\t\t\t\t\t$KOBJ.each(toClick,function(){\n\t\t\t\t\t\t\t\t\tvar el = $KOBJ(this);\n\t\t\t\t\t\t\t\t\tvar select = false;\n\t\t\t\t\t\t\t\t\tif(el.attr(\"src\") && el.attr(\"src\").search(regex) > -1){\n\t\t\t\t\t\t\t\t\tselect = true;\n\t\t\t\t\t\t\t\t\t} else if(el.attr(\"title\") && el.attr(\"title\").search(regex) > -1){\n\t\t\t\t\t\t\t\t\tselect = true;\n\t\t\t\t\t\t\t\t\t} else if(el.attr(\"alt\") && el.attr(\"alt\").search(regex) > -1){\n\t\t\t\t\t\t\t\t\tselect = true;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif(select){\n\t\t\t\t\t\t\t\t\t// Click on the image!\n\t\t\t\t\t\t\t\t\tKOBJ.fireEvent(el,\"click\");\n\t\t\t\t\t\t\t\t\tif($K(\"input[type=radio]\",el.parent()).length == 1){\n\t\t\t\t\t\t\t\t\t$K(\"input[type=radio]\",el.parent()).attr(\"checked\",\"checked\");\n\t\t\t\t\t\t\t\t\tdone = true;\n\t\t\t\t\t\t\t\t\t// Unless it's a link, then run the href. I may not want to be evaling here, but I am not sure how else to do this.\n\t\t\t\t\t\t\t\t\t// TODO: make this not use an eval.\n\t\t\t\t\t\t\t\t\t} else if(el.parent().length == 1 && el.parent()[0].tagName.toUpperCase() === \"A\"){\n\t\t\t\t\t\t\t\t\tKOBJ.fireEvent(el.parent(),\"click\");\n\t\t\t\t\t\t\t\t\tif(el.parent().attr(\"href\").search(/javascript:/) > -1){\n\t\t\t\t\t\t\t\t\t\t// Evals are potentially evil. I don't like doing this.\n\t\t\t\t\t\t\t\t\t\teval(el.parent().attr(\"href\").replace(/^javascript:/,\"\"));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tdone = true;\n\t\t\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if(typeOfElement == \"div\"){\n\n\t\t\t\t\t\tvar done = false;\n\t\t\t\t\t\tvar regex = new RegExp(value, \"i\");\n\n\n\t\t\t\t\t\tKynetxFormDebug(\"Trying Image Specialties\");\n\n\n\t\t\t\t\t\t// Loop over the links within the DIV.\n\t\t\t\t\t\taddCSS = false;\n\t\t\t\t\t\t$K.each($K(\"a\",element),function(){\n\t\t\t\t\t\t\t\tvar imglink = $K(this);\n\t\t\t\t\t\t\t\t// Check the rel of the link.\n\t\t\t\t\t\t\t\tvar rel = imglink.attr(\"rel\");\n\t\t\t\t\t\t\t\tif (rel.toUpperCase() == value.toUpperCase()){\n\t\t\t\t\t\t\t\tKOBJ.fireEvent(imglink,\"click\");\n\t\t\t\t\t\t\t\timglink.addClass(defaults.className);\n\t\t\t\t\t\t\t\tdone = true;\n\t\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\timglink.removeClass(defaults.className);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t});\t\n\n\t\t\t\t\t} else if(typeOfElement === \"link\"){\n\t\t\t\t\t\telement.text(value);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t} else { // Otherwise, try jQuery's .val()\n\t\t\t\t\t\telement.val(value);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Remove the highlighting if value is blank and element is not currently visible on the page\n\t\t\t\t\tif(value !== \"\" && addCSS && element.is(\":visible\")){\n\t\t\t\t\t\telement.addClass(defaults.className);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tKynetxFormDebug(\"Removing highlight for element \" + element.selector);\n\t\t\t\t\t\telement.removeClass(defaults.className);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Trigger events\n\t\t\t\t\tif(!thismap.no_click){\n\t\t\t\t\t\tKOBJ.fireEvent(element,\"blur\");\n\t\t\t\t\t}\n\t\t\t\t\tif(thismap.change && changed){\n\t\t\t\t\t\tKOBJ.fireEvent(element,\"change\");\n\t\t\t\t\t} else if (thismap.change && !changed) {\n\t\t\t\t\t\tKynetxFormDebug(\"Not firing change event for element: \"+element.selector+\" element value was already set.\");\n\t\t\t\t\t}\n\n\t\t\t\t\t// Remove labels? Mainly for http://www.apple.com/\n\t\t\t\t\tif(thismap.nuke_labels){\n\t\t\t\t\t\t$KOBJ(\"[for=\"+selector.replace(/#|\\.|\\[name=|\\]/g,\"\")+\"]\").remove();\n\t\t\t\t\t}\n\n\t\t\t\t\tvar elVal = String(element.val());\n\t\t\t\t\tvar elText = String(element.text()).replace(/(?:^\\s+|^)(.*?)(?:\\s+$|$)/,\"$1\");\n\n\t\t\t\t\tif (typeOfElement === \"radio\") {\n\t\t\t\t\t\tKynetxFormDebug(\"Expected \" + value + \" got \" + String($KOBJ(element.selector+\":checked\").val()));\n\t\t\t\t\t} else if (typeOfElement === \"select\"){\n\t\t\t\t\t\tKynetxFormDebug(\"Expected \" + value + \" got \" + String($KOBJ(\":selected\", element).text().replace(/(?:^\\s+|^)(.*?)(?:\\s+$|$)/,\"$1\")));\n\t\t\t\t\t} else if (typeOfElement === \"link\") {\n\t\t\t\t\t\tKynetxFormDebug(\"Expected \" + value + \" got \" + elText);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tKynetxFormDebug(\"Expected \" + value + \" got \" + elVal);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar filled = false;\n\n\t\t\t\t\t// checks to see that what was filled is what we wanted\n\t\t\t\t\tif(typeOfElement === \"text\") {\n\t\t\t\t\t\tfilled = Boolean(KOBJ.validateFormFill(elVal.toUpperCase(), value.toUpperCase()));\n\t\t\t\t\t\tif(!filled) {\n\t\t\t\t\t\t\tthrow \"form didn't fill as expected, wanted \"+ value +\", and got \"+ elVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if(typeOfElement === \"select\") {\n\t\t\t\t\t\tvar selectedOptText = String($KOBJ(\":selected\", element).text()).replace(/(?:^\\s+|^)(.*?)(?:\\s+$|$)/,\"$1\");\n\t\t\t\t\t\tfilled = Boolean(KOBJ.validateFormFill(elVal.toUpperCase(), value.toUpperCase()) || KOBJ.validateFormFill(selectedOptText.toUpperCase(), value.toUpperCase()));\n\t\t\t\t\t\tif(!filled) {\n\t\t\t\t\t\t\tthrow \"form didn't fill as expected, wanted \"+ value+\", and got \"+ elVal +\" and \"+ selectedOptText;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if(typeOfElement === \"radio\") {\n\t\t\t\t\t\tvar checkedVal = String($KOBJ(element.selector+\":checked\").val());\n\t\t\t\t\t\tfilled = Boolean(KOBJ.validateFormFill(checkedVal.toUpperCase(), value.toUpperCase())); \n\t\t\t\t\t\tif (!filled) {\n\t\t\t\t\t\t\tthrow \"form didn't fill as expected, wanted \" + value +\", and got \" + checkedVal; \n\t\t\t\t\t\t}\n\t\t\t\t\t} else if(typeOfElement === \"div\") {\n\t\t\t\t\t\tfilled = Boolean($KOBJ(\"a\", element).hasClass(defaults.className));\n\t\t\t\t\t\tif(!filled) {\n\t\t\t\t\t\t\tthrow \"form didn't fill as expected, wanted \" + elVal +\" and got no match\";\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if(typeOfElement === \"link\") {\n\t\t\t\t\t\tfilled = Boolean(KOBJ.validateFormFill(elText.toUpperCase(), value.toUpperCase()));\n\t\t\t\t\t\tif(!filled) {\n\t\t\t\t\t\t\tthrow \"form didn't fill as expected, wanted \"+ value +\", and got \" + elText;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfilled = Boolean(KOBJ.validateFormFill(elVal.toUpperCase(), value.toUpperCase()));\n\t\t\t\t\t\tif(!filled) {\n\t\t\t\t\t\t\tif (elText) {\n\t\t\t\t\t\t\t\tthrow \"form didn't fill as expected, wanted \"+ value +\", and got \" + elVal +\" and \" + elText;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow \"form didn't fill as expected, wanted \" + value + \", and got \" + elVal;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn toReturn;\n\t\t\t}\n\n\t\t\tvar toRun = fillClosure(selector);\n\n\t\t\tif(watchSelThingyMajig){\n\t\t\t\tKOBJ.watchDOM(watchSelThingyMajig,toRun);\n\t\t\t} else {\n\t\t\t\ttoRun();\n\t\t\t\t}\n\t\t\t} catch(error) {\n\t\t\t\terrorState = true;\n\t\t\t\tKynetxFormDebug(\"Error: \"+ $K.compactJSON(error) );\n\t\t\t\t// No data is a business case. If Visa supplies us no data to fill, it is not an error.\n\t\t\t\tif(error == \"no data\"){\n\t\t\t\t\tKynetxFormDebug(\"No data for \" + thismap.map);\n\t\t\t\t\tnoData++;\n\t\t\t\t// Otherwise, increase the error count.\n\t\t\t\t} else {\n\t\t\t\t\tanyError = true;\n\t\t\t\t\terrors++;\n\t\t\t\t}\n\t\t\t\t// Push the data about this map onto the array\n\t\t\t\tstateArray.push({\"error\":error, \"selector\": selector, \"map\": mapTo});\n\t\t\t}\n\n\t\t\t// If there was no error, we still need to push data about the map onto the array.\n\t\t\tif(!errorState){\n\t\t\t\tKynetxFormDebug(\"Success for \" + thismap.map);\n\t\t\t\tsuccesses++;\n\t\t\t\tstateArray.push({\"error\":\"none\", \"selector\": selector, \"map\": mapTo});\n\t\t\t}\n\t\t});\n\n\t\t// Send the data to Visa.\n\t\tKynetxFillResult({'success':successes, 'failure':errors});\n\t\tvar status = 'none';\n\n\t\tvar length = wanted;\n\n\t\t// Check to see if it was no data, full success, only partial, or a fail.\n\t\tif(length === 0){\n\t\t\tstatus = 'none';\n\t\t} else if(successes == length){\n\t\t\tstatus = 'full';\n\t\t} else if(successes > 0){\n\t\t\tstatus = 'partial';\n\t\t} else if(successes === 0 && length !== 0){\n\t\t\tstatus = 'fail';\n\t\t}\n\n\t\tvar problemData = '';\n\n\t\t// Stick the bad data into a comma separated string.\n\t\t$KOBJ.each(stateArray, function(index,data){\n\t\t\tif(!(data.error == \"none\" || data.error == \"no data\")){\n\t\t\t\tif(problemData){\n\t\t\t\t\tproblemData += \",\";\n\t\t\t\t}\n\t\t\t\tproblemData += data.map;\n\t\t\t} else if(data.error === \"no data\"){\n\t\t\t\tproblemData = \"no data\";\n\t\t\t}\n\t\t});\n\n\t\t// Send the error data. ?callback=? is need to make it JSONP ish.\n\t    \tif(anyError && defaults.cburl){\n\t\t\t$KOBJ.getJSON(defaults.cburl + \"?callback=?&map=\"+defaults.mapname+\"&errors=\"+problemData,function(){});\n\t\t}\n\t\tvar toSend = {\n\t\t\t\"length\":length,\n\t\t\t\"successes\":successes,\n\t\t\t\"errors\":errors,\n\t\t\t\"status\":status,\n\t\t\t\"problem fields\":problemData,\n\t\t\t\"transaction id\":defaults['txn_id'],\n\t\t\t\"url\":KOBJ.location(\"href\"),\n\t\t\t\"rule name\":defaults['rule_name'],\n\t\t\t\"ruleset id\":defaults['rid'],\n\t\t\t\"map name\":defaults['mapname']\n\t\t};\n\t\t\t\n\n\t\tKynetxFormDebug(\"The data being sent to Kynetx reporting is:\");\n\t\tKynetxFormDebug(JSON.stringify(toSend, null, 2));\n\t    \t\n\t\t// Make a callback to KRL\n\t\tKOBJ.ff_logger('explicit', defaults['txn_id'], KOBJ.location(\"href\"), problemData, status, defaults['rule_name'], defaults['rid'],defaults['mapname']);\n\t};\n\t\t  \n  "},{"rhs":{"source":"page","predicate":"env","args":[{"val":"caller","type":"str"}],"type":"qualified"},"lhs":"fullurl","type":"expr"},{"rhs":{"source":"page","predicate":"url","args":[{"val":"domain","type":"str"}],"type":"qualified"},"lhs":"d","type":"expr"},{"rhs":{"source":"datasource","predicate":"maps","args":[{"source":"page","predicate":"url","args":[{"val":"domain","type":"str"}],"type":"qualified"}],"type":"qualified"},"lhs":"maps","type":"expr"}],"global_start_line":15,"dispatch":[],"dispatch_start_col":1,"meta_start_line":2,"rules":[{"cond":{"obj":{"val":"fullurl","type":"var"},"args":[{"obj":{"val":"excp","type":"var"},"args":[{"val":"regexp","type":"str"}],"name":"as","type":"operator"}],"name":"match","type":"operator"},"blocktype":"every","actions":[{"action":{"source":null,"name":"set_form_maps","args":[{"val":"fields","type":"var"}],"modifiers":[{"value":{"val":"name","type":"var"},"name":"mapname"}],"vars":null},"label":null}],"post":null,"pre":[{"rhs":{"obj":{"val":"map","type":"var"},"args":[{"val":"$.regex","type":"str"}],"name":"pick","type":"operator"},"lhs":"regexstring","type":"expr"},{"rhs":{"val":"/","type":"str"},"lhs":"slash","type":"expr"},{"rhs":{"args":[{"val":"/","type":"str"},{"args":[{"obj":{"val":"regexstring","type":"var"},"args":[{"args":[{"val":"/","type":"str"},{"args":[{"val":"slash","type":"var"},{"val":"/g","type":"str"}],"type":"prim","op":"+"}],"type":"prim","op":"+"},{"val":"\\/","type":"str"}],"name":"replace","type":"operator"},{"val":"/i","type":"str"}],"type":"prim","op":"+"}],"type":"prim","op":"+"},"lhs":"excp","type":"expr"},{"rhs":{"obj":{"val":"map","type":"var"},"args":[{"val":"$.fields","type":"str"}],"name":"pick","type":"operator"},"lhs":"fields","type":"expr"},{"rhs":{"obj":{"val":"map","type":"var"},"args":[{"val":"$.mapname","type":"str"}],"name":"pick","type":"operator"},"lhs":"name","type":"expr"}],"name":"findmap","start_col":1,"emit":null,"state":"active","callbacks":null,"pagetype":{"event_expr":{"pattern":".*","legacy":1,"type":"prim_event","vars":[],"op":"pageview"},"foreach":[{"expr":{"val":"maps","type":"var"},"var":["map"]}]},"start_line":1591},{"cond":{"args":[],"function_expr":{"val":"truth","type":"var"},"type":"app"},"blocktype":"every","actions":[{"label":null,"emit":"var hasforms = KOBJ.a41x88.forms.length > 0;    \t\n            KynetxFormsLoaded(hasforms);\n          "}],"post":null,"pre":null,"name":"lastrule","start_col":5,"emit":null,"state":"active","callbacks":null,"pagetype":{"event_expr":{"pattern":".*","legacy":1,"type":"prim_event","vars":[],"op":"pageview"},"foreach":[]},"start_line":1610}],"meta_start_col":1,"meta":{"logging":"off","name":"FormFiller","meta_start_line":2,"author":"Sam & JAM","description":"Prod!!!\n  ","meta_start_col":1},"dispatch_start_line":11,"global_start_col":1,"ruleset_name":"a41x88"}
