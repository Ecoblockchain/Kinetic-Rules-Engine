{
   "dispatch": [],
   "global": [
      {
         "cachable": {
            "period": "seconds",
            "value": "30"
         },
         "datatype": "JSON",
         "name": "maps",
         "source": "http://fmm.kynetx.com/lookup/",
         "type": "datasource"
      },
      {"emit": "\n\n\twindow.KynetxFormsLoaded = function(loaded){\n\t\tKOBJ.log('Forms loaded: '+ loaded);\n\t\tif(loaded){\n\t\t\tvar config = {'rids':['a41x104'],'a41x104:kynetx_app_version':'dev'};\n\t\t\tKOBJ.add_app_config(config);\n\t\t\tKOBJ.get_application('a41x104').run();\n\t\t}\n\t};\n\n\twindow.KynetxFormDebug = function(){\n\t};\n\n\twindow.KynetxFillResult = function(data){\n\t};\n\n\tKOBJ.a41x88 = KOBJ.a41x88 || {};\n\tKOBJ.a41x88.forms = KOBJ.a41x88.forms || [];\n\n\tKOBJ.ff_logger = function(type,txn_id,url,element,sense,rule,rid,callback_info){\n\t\tvar logger_url= \"https://\" + KOBJ.callback_host+ \"/callback/\"+rid+\"?jsoncb=?&\"+rid+\"&type=\"+type+\"&txn_id=\"+txn_id+\"&rule=\"+rule;\n\t\tif(url){\n\t\t\tlogger_url+=\"&caller=\"+escape(url);\n\t\t}\n\t\tif(rid){\n\t\t\tlogger_url+=\"&rid=\"+rid;\n\t\t}\n\t\tif(element){\n\t\t\tlogger_url+=\"&element=\"+element;\n\t\t}\n\t\tif(sense){\n\t\t\tlogger_url+=\"&sense=\"+sense;\n\t\t}\n\t\tif(callback_info){\n\t\t\tlogger_url+=\"&message=\"+escape(callback_info);\n\t\t}\n\t\t$KOBJ.getJSON(logger_url,function(){});\n\t};\n\t\n\n\t(function ($) {\n\t    $.format = (function () {\n\n\t\t\tvar parseMonth = function(value){\n\n\t\t\tswitch(value){\n\t\t\tcase \"Jan\":\n\t\t\t\treturn \"01\";\n\t\t\t\tbreak;\n\t\t\tcase \"Feb\":\n\t\t\t\treturn \"02\";\n\t\t\t\tbreak;\n\t\t\tcase \"Mar\":\n\t\t\t\treturn \"03\";\n\t\t\t\tbreak;\n\t\t\tcase \"Apr\":\n\t\t\t\treturn \"04\";\n\t\t\t\tbreak;\n\t\t\tcase \"May\":\n\t\t\t\treturn \"05\";\n\t\t\t\tbreak;\n\t\t\tcase \"Jun\":\n\t\t\t\treturn \"06\";\n\t\t\t\tbreak;\n\t\t\tcase \"Jul\":\n\t\t\t\treturn \"07\";\n\t\t\t\tbreak;\n\t\t\tcase \"Aug\":\n\t\t\t\treturn \"08\";\n\t\t\t\tbreak;\n\t\t\tcase \"Sep\":\n\t\t\t\treturn \"09\";\n\t\t\t\tbreak;\n\t\t\tcase \"Oct\":\n\t\t\t\treturn \"10\";\n\t\t\t\tbreak;\n\t\t\tcase \"Nov\":\n\t\t\t\treturn \"11\";\n\t\t\t\tbreak;\n\t\t\tcase \"Dec\":\n\t\t\t\treturn \"12\";\n\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn value;\n\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar parseTime = function(value){\n\t\t\t\tvar retValue = value;\n\t\t\t\tif(retValue.indexOf(\".\") != -1){\n\t\t\t\t\tretValue =  retValue.substring(0, retValue.indexOf(\".\"));\n\t\t\t\t}\n\n\t\t\tvar values3 = retValue.split(\":\");\n\n\t\t\tif(values3.length == 3){\n\t\t\t\thour\t\t= values3[0];\n\t\t\t\tminute\t\t= values3[1];\n\t\t\t\tsecond\t\t= values3[2];\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttime: retValue,\n\t\t\t\t\t\t\thour: hour,\n\t\t\t\t\t\t\tminute: minute,\n\t\t\t\t\t\t\tsecond: second\n\t\t\t\t\t};\n\t\t\t} else {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttime: \"\",\n\t\t\t\t\t\thour: \"\",\n\t\t\t\t\t\tminute: \"\",\n\t\t\t\t\t\tsecond: \"\"\n\t\t\t\t};\n\t\t\t}\n\t\t\t};\n\n\t\treturn {\n\t\t    date: function(value, format){\n\t\t\ttry{\n\t\t\t\tvar values = value.split(\" \");\n\t\t\t\tvar year \t\t= null;\n\t\t\t\tvar month \t\t= null;\n\t\t\t\tvar dayOfMonth \t= null;\n\t\t\t\tvar time \t\t= null;\n\n\t\t\t\tswitch(values.length){\n\t\t\t\tcase 6:\n\t\t\t\t\tyear \t\t= values[5];\n\t\t\t\t\tmonth \t\t= parseMonth(values[1]);\n\t\t\t\t\tdayOfMonth \t= values[2];\n\t\t\t\t\ttime\t\t= parseTime(values[3]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tvar values2 = values[0].split(\"-\");\n\t\t\t\t\tyear \t\t= values2[0];\n\t\t\t\t\tmonth \t\t= values2[1];\n\t\t\t\t\tdayOfMonth \t= values2[2];\n\t\t\t\t\ttime \t\t= parseTime(values[1]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tvar dates = value.split(\"/\");\n\t\t\t\t\tyear = dates[1];\n\t\t\t\t\tmonth = dates[0];\n\t\t\t\t\tdayOfMonth = \"00\";\n\t\t\t\t\ttime = parseTime(\"00:00:00.000\");\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn value;\n\t\t\t\tbreak;\n\t\t\t\t}\n\n\n\t\t\t\tvar pattern \t= \"\";\n\t\t\t\tvar retValue \t= \"\";\n\n\t\t\t\tfor(i = 0; i < format.length; i++){\n\t\t\t\t\tvar currentPattern = format.charAt(i);\n\t\t\t\t\tpattern += currentPattern;\n\t\t\t\t\tswitch(pattern){\n\t\t\t\t\tcase \"dd\":\n\t\t\t\t\t\tretValue += dayOfMonth;\n\t\t\t\t\t\tpattern   = \"\";\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"mM\":\n\t\t\t\t\t\tretValue += month.replace(/0/,\"\");\n\t\t\t\t\t\tpatern = \"\";\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"MM\":\n\t\t\t\t\t\tretValue += month;\n\t\t\t\t\t\tpattern   = \"\";\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"yyyy\":\n\t\t\t\t\t\tretValue += year;\n\t\t\t\t\t\tpattern   = \"\";\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"HH\":\n\t\t\t\t\t\tretValue += time.hour;\n\t\t\t\t\t\tpattern   = \"\";\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"hh\":\n\t\t\t\t\t\tretValue += time.hour;\n\t\t\t\t\t\tpattern   = \"\";\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"mm\":\n\t\t\t\t\t\tretValue += time.minute;\n\t\t\t\t\t\tpattern   = \"\";\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"ss\":\n\t\t\t\t\t\tretValue += time.second;\n\t\t\t\t\t\tpattern   = \"\";\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase \" \":\n\t\t\t\t\t\tretValue += currentPattern;\n\t\t\t\t\t\tpattern   = \"\";\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"/\":\n\t\t\t\t\t\tretValue += currentPattern;\n\t\t\t\t\t\tpattern   = \"\";\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase \":\":\n\t\t\t\t\t\tretValue += currentPattern;\n\t\t\t\t\t\tpattern   = \"\";\n\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif(pattern.length == 2 && pattern.indexOf(\"y\") != 0){\n\t\t\t\t\t\t\tretValue += pattern.substring(0, 1);\n\t\t\t\t\t\t\tpattern = pattern.substring(1, 2);\n\t\t\t\t\t\t} else if((pattern.length == 3 && pattern.indexOf(\"yyy\") == -1)){\n\t\t\t\t\t\t\tpattern   = \"\";\n\t\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t    }\n\t\t\t\treturn retValue;\n\t\t\t} catch(e) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\t}\n\t\t};\n\t    })();\n\t}($KOBJ));\n\n\n\n\n\tKOBJ.stateMap = {\n\n\t\"AL\":\"ALABAMA\",\n\n\t\"AK\":\"ALASKA\",\n\n\t\"AS\":\"AMERICAN SAMOA\",\n\n\t\"AZ\":\"ARIZONA\",\n\n\t\"AR\":\"ARKANSAS\",\n\n\t\"CA\":\"CALIFORNIA\",\n\n\t\"CO\":\"COLORADO\",\n\n\t\"CT\":\"CONNECTICUT\",\n\n\t\"DE\":\"DELAWARE\",\n\n\t\"DC\":\"DISTRICT OF COLUMBIA\",\n\n\t\"FM\":\"FEDERATED STATES OF MICRONESIA\",\n\n\t\"FL\":\"FLORIDA\",\n\n\t\"GA\":\"GEORGIA\",\n\n\t\"GU\":\"GUAM\",\n\n\t\"HI\":\"HAWAII\",\n\n\t\"ID\":\"IDAHO\",\n\n\t\"IL\":\"ILLINOIS\",\n\n\t\"IN\":\"INDIANA\",\n\n\t\"IA\":\"IOWA\",\n\n\t\"KS\":\"KANSAS\",\n\n\t\"KY\":\"KENTUCKY\",\n\n\t\"LA\":\"LOUISIANA\",\n\n\t\"ME\":\"MAINE\",\n\n\t\"MH\":\"MARSHALL ISLANDS\",\n\n\t\"MD\":\"MARYLAND\",\n\n\t\"MA\":\"MASSACHUSETTS\",\n\n\t\"MI\":\"MICHIGAN\",\n\n\t\"MN\":\"MINNESOTA\",\n\n\t\"MS\":\"MISSISSIPPI\",\n\n\t\"MO\":\"MISSOURI\",\n\n\t\"MT\":\"MONTANA\",\n\n\t\"NE\":\"NEBRASKA\",\n\n\t\"NV\":\"NEVADA\",\n\n\t\"NH\":\"NEW HAMPSHIRE\",\n\n\t\"NJ\":\"NEW JERSEY\",\n\n\t\"NM\":\"NEW MEXICO\",\n\n\t\"NY\":\"NEW YORK\",\n\n\t\"NC\":\"NORTH CAROLINA\",\n\n\t\"ND\":\"NORTH DAKOTA\",\n\n\t\"MP\":\"NORTHERN MARIANA ISLANDS\",\n\n\t\"OH\":\"OHIO\",\n\n\t\"OK\":\"OKLAHOMA\",\n\n\t\"OR\":\"OREGON\",\n\n\t\"PW\":\"PALAU\",\n\n\t\"PA\":\"PENNSYLVANIA\",\n\n\t\"PR\":\"PUERTO RICO\",\n\n\t\"RI\":\"RHODE ISLAND\",\n\n\t\"SC\":\"SOUTH CAROLINA\",\n\n\t\"SD\":\"SOUTH DAKOTA\",\n\n\t\"TN\":\"TENNESSEE\",\n\n\t\"TX\":\"TEXAS\",\n\n\t\"UT\":\"UTAH\",\n\n\t\"VT\":\"VERMONT\",\n\n\t\"VI\":\"VIRGIN ISLANDS\",\n\n\t\"VA\":\"VIRGINIA\",\n\n\t\"WA\":\"WASHINGTON\",\n\n\t\"WV\":\"WEST VIRGINIA\",\n\n\t\"WI\":\"WISCONSIN\",\n\n\t\"WY\":\"WYOMING\"\n\n\t};\n\n\tKOBJ.countryCodes = {\n\n\t\"USA\":{\"Long\":\"United States of America\", \"Short\":\"United States\", \"CC\":\"US\", \"CCC\":\"USA\",\"cc\":\"us\",\"ccc\":\"usa\"}\n\n\t};\n\n\tKOBJ.creditCards = {\n\n\t\"Visa\": { \"CT\":\"VI\", \"CCType\":\"Visa\",\"CCTYPE\":\"VISA\", \"VS\":\"VS\", \"CC Type\":\"Visa\", \"amex\":\"visa\"},\n\t\"1\": { \"CT\":\"VI\", \"CCType\":\"Visa\",\"CCTYPE\":\"VISA\", \"VS\":\"VS\", \"CC Type\":\"Visa\", \"amex\":\"visa\"},\n\t\"American Express\": { \"CT\":\"AX\", \"CCType\":\"American Express\",\"CCTYPE\":\"AMERICAN EXPRESS\", \"VS\":\"AE\", \"CC Type\":\"American Express\", \"amex\":\"amex\"},\n\t\"2\": { \"CT\":\"AX\", \"CCType\":\"American Express\",\"CCTYPE\":\"AMERICAN EXPRESS\", \"VS\":\"AE\",\"CC Type\":\"American Express\", \"amex\":\"amex\"},\n\t\"Discover\": { \"CT\":\"DI\", \"CCType\":\"Discover\",\"CCTYPE\":\"DISCOVER\",\"VS\":\"DC\",\"CC Type\":\"Discover\", \"amex\":\"disc\"},\n\t\"3\": { \"CT\":\"DI\", \"CCType\":\"Discover\",\"CCTYPE\":\"DISCOVER\",\"VS\":\"DC\", \"CC Type\":\"Discover\", \"amex\":\"disc\"},\n\t\"MasterCard\": { \"CT\":\"MC\", \"CCType\":\"MasterCard\",\"CCTYPE\":\"MASTERCARD\", \"VS\":\"MC\", \"CC Type\":\"Master Card\", \"amex\":\"mc\"},\n\t\"4\": { \"CT\":\"MC\", \"CCType\":\"MasterCard\",\"CCTYPE\":\"MASTERCARD\", \"VS\":\"MC\", \"CC Type\":\"Master Card\", \"amex\":\"mc\"}\n\n\t};\n\n\tKOBJ.dates = {\n\t\t\"months\":{\n\t\t\t\"01\":{\"Mon\":\"Jan\"},\n\t\t\t\"02\":{\"Mon\":\"Feb\"},\n\t\t\t\"03\":{\"Mon\":\"Mar\"},\n\t\t\t\"04\":{\"Mon\":\"Apr\"},\n\t\t\t\"05\":{\"Mon\":\"May\"},\n\t\t\t\"06\":{\"Mon\":\"Jun\"},\n\t\t\t\"07\":{\"Mon\":\"Jul\"},\n\t\t\t\"08\":{\"Mon\":\"Aug\"},\n\t\t\t\"09\":{\"Mon\":\"Sep\"},\n\t\t\t\"10\":{\"Mon\":\"Oct\"},\n\t\t\t\"11\":{\"Mon\":\"Nov\"},\n\t\t\t\"12\":{\"Mon\":\"Dec\"}\n\t\t}\n\t};\n\n\tKOBJ.STToState = function(val){\n\t\tvar lookedUp = KOBJ.stateMap[val.toUpperCase()];\n\t\tif(lookedUp){\n\t\t\treturn lookedUp;\n\t\t}\n\t\treturn \"\";\n\t};\n\n\tKOBJ.countryCodeToCountry = function(val,format){\n\t\tvar lookedUp = KOBJ.countryCodes[val][format];\n\n\t\tif(lookedUp){\n\t\t\treturn lookedUp;\n\t\t}\n\t\treturn \"\";\n\t};\n\n\tKOBJ.creditCardFormatter = function(value, format){\n\t\tvar lookedUp = KOBJ.creditCards[value][format];\n\n\t\tif(lookedUp){\n\t\t\treturn lookedUp;\n\t\t}\n\t\treturn \"\";\n\t};\n\n\tKOBJ.getMonthName = function(value,format) {\n\t\tvar lookedUp = KOBJ.dates.months[value.split(\"/\")[0]][format];\n\n\t\tif(lookedUp){\n\t\t\treturn lookedUp;\n\t\t}\n\t\treturn \"\";\n\t};\n\n\tKOBJ.setFormMaps = function(mapToPush,config){\n\t\tmapToPush = {\"map\":mapToPush,\"config\":config};\n\t\tKOBJ.a41x88.forms.push(mapToPush);\n\t};\n\n\tKOBJ.fillFormsDefault = {\n\t\t\"fillCSS\": {},\n\t\t\"highlight-color\":\"#FFFFCC\",\n\t\t\"cburl\":\"https://fmm.kynetx.com/reporterror\"\n\t};\n\n\tKOBJ.formatData = function(formatpassed,valuepassed){\n\t\tvar valToBe, tempVal;\n\t\tvaluepassed = String(valuepassed);\n\t\tswitch(formatpassed){\n\t\t\tcase \"area\":\n\t\t\t\tvalToBe = valuepassed.slice(0,3);\n\t\t\tbreak;\n\n\t\t\tcase \"first-3\":\n\t\t\t\tvalToBe = valuepassed.slice(3,6);\n\t\t\tbreak;\n\n\t\t\tcase \"last-4\":\n\t\t\t\tvalToBe = valuepassed.slice(6,10);\n\t\t\tbreak;\n\n\t\t\tcase \"last-7\":\n\t\t\t\tvalToBe = valuepassed.slice(3,10);\n\t\t\tbreak;\n\n\t\t\tcase \"all\":\n\t\t\t\tvalToBe = valuepassed;\n\t\t\tbreak;\n\n\t\t\tcase \"ST\":\n\t\t\t\tvalToBe = valuepassed;\n\t\t\tbreak;\n\n\t\t\tcase \"State\":\n\t\t\t\tvalToBe = KOBJ.STToState(valuepassed);\n\t\t\tbreak;\n\n\t\t\tcase \"ST - State\":\n\t\t\t\tvalToBe = valuepassed + ' - ' + KOBJ.STToState(valuepassed);\n\t\t\tbreak;\n\n\t\t\tcase \"STATE\":\n\t\t\t\tvalToBe = KOBJ.STToState(valuepassed).toUpperCase();\n\t\t\tbreak;\n\n\t\t\tcase \"Long\":\n\t\t\t\tvalToBe = KOBJ.countryCodeToCountry(valuepassed,formatpassed);\n\t\t\tbreak;\n\n\t\t\tcase \"Short\":\n\t\t\t\tvalToBe = KOBJ.countryCodeToCountry(valuepassed,formatpassed);\n\t\t\tbreak;\n\n\t\t\tcase \"CC\":\n\t\t\t\tvalToBe = KOBJ.countryCodeToCountry(valuepassed,formatpassed);\n\t\t\tbreak;\n\n\t\t\tcase \"CCC\":\n\t\t\t\tvalToBe = KOBJ.countryCodeToCountry(valuepassed,formatpassed);\n\t\t\tbreak;\n\n\t\t\tcase \"cc\":\n\t\t\t\tvalToBe = KOBJ.countryCodeToCountry(valuepassed,formatpassed);\n\t\t\tbreak;\n\n\t\t\tcase \"ccc\":\n\t\t\t\tvalToBe = KOBJ.countryCodeToCountry(valuepassed,formatpassed);\n\t\t\tbreak;\n\n\t\t\tcase \"CCType\":\n\t\t\t\tvalToBe = KOBJ.creditCardFormatter(valuepassed,formatpassed);\n\t\t\tbreak;\n\n\t\t\tcase \"CC Type\":\n\t\t\t\tvalToBe = KOBJ.creditCardFormatter(valuepassed,formatpassed);\n\t\t\tbreak;\n\n\t\t\tcase \"CCTYPE\":\n\t\t\t\tvalToBe = KOBJ.creditCardFormatter(valuepassed,formatpassed);\n\t\t\tbreak;\n\n\t\t\tcase \"CT\":\n\t\t\t\tvalToBe = KOBJ.creditCardFormatter(valuepassed,formatpassed);\n\t\t\tbreak;\n\n\t\t\tcase \"VS\":\n\t\t\t\tvalToBe = KOBJ.creditCardFormatter(valuepassed,formatpassed);\n\t\t\tbreak;\n\t\t\t\n\t\t\tcase \"MMyy\":\n\t\t\t\tvalToBe = $KOBJ.format.date(valuepassed,\"MM\") + $KOBJ.format.date(valuepassed,\"yyyy\").slice(2);\n\t\t\tbreak;\n\n\t\t\tcase \"yy\":\n\t\t\t\tvalToBe = $KOBJ.format.date(valuepassed,\"yyyy\").slice(2,4);\n\t\t\tbreak;\n\n\t\t\tcase \"y,yyy\":\n\t\t\t\ttempVal = $KOBJ.format.date(valuepassed,\"yyyy\");\n\t\t\t\tvalToBe = tempVal.slice(0,1) + ',' + tempVal.slice(1);\n\t\t\tbreak;\n\n\t\t\tcase \"mM\":\n\t\t\t\ttempVal = $KOBJ.format.date(valuepassed,\"MM\");\n\t\t\t\tif(tempVal[0] == 0){\n\t\t\t\t\tvalToBe = tempVal[1];\n\t\t\t\t} else {\n\t\t\t\t\tvalToBe = tempVal;\n\t\t\t\t}\n\t\t\tbreak;\n\n\t\t\tcase \"Mon\":\n\t\t\t\tvalToBe = KOBJ.getMonthName(valuepassed,formatpassed);\n\t\t\tbreak;\n\n\t\t\tcase \"first-group\":\n\t\t\t\tvalToBe = valuepassed.slice(0,4);\n\t\t\tbreak;\n\n\t\t\tcase \"second-group\":\n\t\t\t\tvalToBe = valuepassed.slice(4,8);\n\t\t\tbreak;\n\n\t\t\tcase \"third-group\":\n\t\t\t\tvalToBe = valuepassed.slice(8,12);\n\t\t\tbreak;\n\n\t\t\tcase \"last-group\":\n\t\t\t\tvalToBe = valuepassed.slice(12);\n\t\t\tbreak;\n\n\t\t\tcase \"fullname\":\n\t\t\t\tvalToBe = valuepassed;\n\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tvalToBe = $KOBJ.format.date(valuepassed,formatpassed);\n\t\t\tbreak;\n\t\t}\n\n\t\tif(valToBe){\n\t\t\treturn valToBe;\n\t\t}\n\t\treturn false;\n\t};\n\n\tKOBJ.fillForms = function(formData, configuration){\n\n\t\tvar defaults = $KOBJ.extend(true, {}, KOBJ.fillFormsDefault);\n\n\t\tif(typeof(configuration) === \"object\"){\n\t\t\t$KOBJ.extend(true, defaults, configuration);\n\t\t}\n\n\t\tif(defaults[\"highlight-color\"]){\n\t\t\tdefaults.fillCSS[\"background-color\"] = defaults[\"highlight-color\"];\n\t\t}\n\n\t\tvar maxLengthURL = KOBJ.maxURLLength;\n\t\tvar forms = KOBJ.a41x88.forms[KOBJ.a41x88.forms.length - 1];\n\t\tif(typeof forms.config === \"object\"){\n\t\t\t$KOBJ.extend(defaults,forms.config,true);\n\t\t}\n\n\t\tvar formMap = forms.map;\n\t\tvar stateArray = [];\n\t\tvar errorState, anyError = false;\n\t\tvar wanted = 0;\n\t\tvar successes = 0;\n\t\tvar noData = 0;\n\t\tvar errors = 0;\n\n\t\t//KynetxFormDebug(\"Map: \" + $KOBJ.compactJSON(formMap) + \"\\nForm Data: \" + $KOBJ.compactJSON(formData));\n\n\t\t$KOBJ.each(formMap,function (index, thismap) {\n\t\t\ttry{\n\n\t\t\t\t//KynetxFormDebug(\"Trying to fill for object: \" + $KOBJ.compactJSON(thismap));\n\n\t\t\t\terrorState = false;\n\t\t\t\tvar selector = thismap.selector;\n\t\t\t\tvar iframe = thismap.iframe;\n\t\t\t\tvar frame = thismap.frame;\n\t\t\t\tvar mapTo = thismap.map;\n\t\t\t\tvar format = thismap.format;\n\t\t\t\tvar mapArray = mapTo.split(\".\");\n\n\t\t\t\tvar value;\n\n\t\t\t\tif((formData[mapArray[0]] && formData[mapArray[0]][mapArray[1]]) || (thismap.format == \"fullname\"  && formData[mapArray[0]] && formData[mapArray[0]][\"firstname\"] && formData[mapArray[0]][\"lastname\"])){\n\t\t\t\t\tif(thismap.format == \"fullname\"){\n\t\t\t\t\t\tvalue = String(formData[mapArray[0]][\"firstname\"] + \" \" + formData[mapArray[0]][\"lastname\"]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = String(formData[mapArray[0]][mapArray[1]]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar element;\n\t\t\t\tif(iframe){\n\t\t\t\t\t//KynetxFormDebug(\"Looking withing iframe\" + iframe + \" for selector \" + selector);\n\t\t\t\t\telement = $KOBJ(iframe).contents().find(selector);\n\t\t\t\t} else if(frame){\n\t\t\t\t\tvar frameObj = $K(frame);\n\t\t\t\t\tif(frameObj && frameObj[0] && frameObj[0].contentDocument){\n\t\t\t\t\t\telement = $KOBJ(selector,frameObj[0].contentDocument);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow \"Frame does not exist\";\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\telement = $KOBJ(selector);\n\t\t\t\t}\n\n\t\t\t\tif(value){\n\t\t\t\t\twanted++;\n\t\t\t\t\tif(element){\n\t\t\t\t\t\tif(element.length){\n\t\t\t\t\t\t\tif(format){\n\t\t\t\t\t\t\t\t//KynetxFormDebug(\"format: \"+ format + \"\\nvalue: \" + value);\n\t\t\t\t\t\t\t\tvalue = KOBJ.formatData(format,value);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(value){\n\t\t\t\t\t\t\t\tif(!thismap.no_click){\n\t\t\t\t\t\t\t\t\telement.click().focus();\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\telement.val(value).css(defaults.fillCSS);\n\t\t\t\t\t\t\t\tif(defaults.nukeLables){\n\t\t\t\t\t\t\t\t\t$KOBJ(\"[for=\"+selector.replace(/#|\\.|\\[name=|\\]/g,\"\")+\"]\").remove();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow \"value formatting was bad\";\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar elVal = String(element.val());\n\n\t\t\t\t\t\t\t//KynetxFormDebug(\"Expected \" + value + \" got \" + element.val());\n\t\t\t\t\t\t\t//KynetxFormDebug(\"Drop Down specialties: \" + !(element.val() == value || element.text == value));\n\n\t\t\t\t\t\t\tif(!(elVal.toUpperCase() == value.toUpperCase() || $K(\":selected\",element).text().replace(/(?:^\\s+|^)(.*?)(?:\\s+$|$)/,\"$1\").toUpperCase() == value.toUpperCase())){\n\t\t\t\t\t\t\t\tif(element[0].tagName.toUpperCase() === \"SELECT\"){\n\t\t\t\t\t\t\t\t\tvar done = false;\n\t\t\t\t\t\t\t\t\t$KOBJ.each(element.children(),function(){\n\t\t\t\t\t\t\t\t\t\tvar select = $KOBJ(this);\n\t\t\t\t\t\t\t\t\t\tvar selectVal = String(select.attr(\"value\"));\n\t\t\t\t\t\t\t\t\t\tvar text = select.text().replace(/(?:^\\s+|^)(.*?)(?:\\s+$|$)/,\"$1\").toUpperCase();\n\t\t\t\t\t\t\t\t\t\tvar regex = new RegExp(\"^\"+value+\"$\",\"i\");\n\n\t\t\t\t\t\t\t\t\t\tif(selectVal.toUpperCase() == value.toUpperCase() || text == value.toUpperCase()){\n\t\t\t\t\t\t\t\t\t\t\tselect.attr(\"selected\",true);\n\t\t\t\t\t\t\t\t\t\t\t//KynetxFormDebug(\"Selected \" + text + \", it matches \" + value);\n\t\t\t\t\t\t\t\t\t\t\tdone = true;\n\t\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tif(!done){\n\t\t\t\t\t\t\t\t\t\t$KOBJ.each(element.children(),function(){\n\t\t\t\t\t\t\t\t\t\t\tvar select = $KOBJ(this);\n\t\t\t\t\t\t\t\t\t\t\tvar selectVal = select.val();\n\t\t\t\t\t\t\t\t\t\t\tvar text = select.text().replace(/(?:^\\s+|^)(.*?)(?:\\s+$|$)/,\"$1\");\n\t\t\t\t\t\t\t\t\t\t\tvar regex = new RegExp(\"^\"+value+\"$\",\"i\");\n\t\t\t\t\t\t\t\t\t\t\tif(selectVal.search(regex) > -1 || text.search(regex) > -1){\n\t\t\t\t\t\t\t\t\t\t\t\tselect.attr(\"selected\",true);\n\t\t\t\t\t\t\t\t\t\t\t\t//KynetxFormDebug(\"Selected \" + text + \", it has the regex \" + regex);\n\t\t\t\t\t\t\t\t\t\t\t\tdone = true;\n\t\t\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif(!done){\n\t\t\t\t\t\t\t\t\t\t$KOBJ.each(element.children(),function(){\n\t\t\t\t\t\t\t\t\t\t\tvar select = $KOBJ(this);\n\t\t\t\t\t\t\t\t\t\t\tvar selectVal = select.val();\n\t\t\t\t\t\t\t\t\t\t\tvar text = select.text().replace(/(?:^\\s+|^)(.*?)(?:\\s+$|$)/,\"$1\");\n\t\t\t\t\t\t\t\t\t\t\tvar regex = new RegExp(value,\"i\");\n\t\t\t\t\t\t\t\t\t\t\tif(selectVal.search(regex) > -1 || text.search(regex) > -1){\n\t\t\t\t\t\t\t\t\t\t\t\tselect.attr(\"selected\",true);\n\t\t\t\t\t\t\t\t\t\t\t\t//KynetxFormDebug(\"Selected \" + text + \", it has the regex \" + regex);\n\t\t\t\t\t\t\t\t\t\t\t\tdone = true;\n\t\t\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t} else if(element[0].tagName.toUpperCase() === \"INPUT\" && element.attr(\"type\").toUpperCase() === \"RADIO\") {\n\t\t\t\t\t\t\t\t\t$KOBJ(\"img[src*=\"+value+\"]\").click();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!(String(element.val()).toUpperCase() == value.toUpperCase() || String($K(\":selected\",element).text()).replace(/(?:^\\s+|^)(.*?)(?:\\s+$|$)/,\"$1\").toUpperCase() == value.toUpperCase() || $K(\":selected\",element).text().replace(/(?:^\\s+|^)(.*?)(?:\\s+$|$)/,\"$1\").search(new RegExp(value,\"i\")) > -1)){\n\t\t\t\t\t\t\t\tthrow \"form didn't fill as expected, wanted \" + value + \", got \" + element.val() + \" and \" + $K(\":selected\",element).text().replace(/(?:^\\s+|^)(.*?)(?:\\s+$|$)/,\"$1\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow \"selector blank\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow \"no data\";\n\t\t\t\t}\n\t\t\t} catch(error) {\n\t\t\t\terrorState = true;\n\t\t\t\t//KynetxFormDebug(\"Error: \"+error);\n\t\t\t\tif(error == \"no data\"){\n\t\t\t\t\t//KynetxFormDebug(\"No data for \" + thismap.map);\n\t\t\t\t\tnoData++;\n\t\t\t\t} else {\n\t\t\t\t\tanyError = true;\n\t\t\t\t\terrors++;\n\t\t\t\t}\n\t\t\t\tstateArray.push({\"error\":error, \"selector\": selector, \"map\": mapTo});\n\t\t\t}\n\n\t\t\tif(!errorState){\n\t\t\t\t//KynetxFormDebug(\"Success for \" + thismap.map);\n\t\t\t\tsuccesses++;\n\t\t\t\tstateArray.push({\"error\":\"none\", \"selector\": selector, \"map\": mapTo});\n\t\t\t}\n\t\t});\n\n\n\n\t\tKynetxFillResult({'success':successes, 'failure':errors});\n\t\tvar status = 'none';\n\n\t\tvar length = wanted;\n\n\t\tif(length === 0){\n\t\t\tstatus = 'none';\n\t\t} else if(successes == length){\n\t\t\tstatus = 'full';\n\t\t} else if(successes > 0){\n\t\t\tstatus = 'partial';\n\t\t} else if(successes === 0 && length !== 0){\n\t\t\tstatus = 'fail';\n\t\t}\n\n\t\tvar problemData = '';\n\n\t\t$KOBJ.each(stateArray, function(index,data){\n\t\t\tif(!(data.error == \"none\" || data.error == \"no data\")){\n\t\t\t\tif(problemData){\n\t\t\t\t\tproblemData += \",\";\n\t\t\t\t}\n\t\t\t\tproblemData += data.map;\n\t\t\t}\n\t\t});\n\n\t    \tif(anyError && defaults.cburl){\n\t\t\t$KOBJ.getJSON(defaults.cburl + \"?callback=?&map=\"+defaults.mapname+\"&errors=\"+problemData,function(){});\n\t\t}\n\t    \t\n\t\tKOBJ.ff_logger('explicit', defaults['txn_id'], KOBJ.location(\"href\"), problemData, status, defaults['rule_name'], defaults['rid'],defaults['mapname']);\n\n\t\tvar annotateArray = KOBJ.splitJSONRequest(stateArray,maxLengthURL,'');\n\n\t\t$KOBJ.each(annotateArray,function(key,data){\n\t\t\t//annotateString = $KOBJ.compactJSON(data);\n\t\t});\n\t};\n\t\t  \n  "},
      {
         "lhs": "fullurl",
         "rhs": {
            "args": [{
               "type": "str",
               "val": "caller"
            }],
            "predicate": "env",
            "source": "page",
            "type": "qualified"
         },
         "type": "expr"
      },
      {
         "lhs": "d",
         "rhs": {
            "args": [{
               "type": "str",
               "val": "domain"
            }],
            "predicate": "url",
            "source": "page",
            "type": "qualified"
         },
         "type": "expr"
      },
      {
         "lhs": "maps",
         "rhs": {
            "args": [{
               "args": [{
                  "type": "str",
                  "val": "domain"
               }],
               "predicate": "url",
               "source": "page",
               "type": "qualified"
            }],
            "predicate": "maps",
            "source": "datasource",
            "type": "qualified"
         },
         "type": "expr"
      }
   ],
   "meta": {
      "author": "Sam & JAM",
      "description": "\n    Prod!!!\n  ",
      "logging": "off",
      "name": "FormFiller"
   },
   "rules": [{
      "actions": null,
      "blocktype": "every",
      "callbacks": null,
      "cond": {
         "type": "bool",
         "val": "true"
      },
      "emit": null,
      "foreach": [[{
         "expr": {
            "type": "var",
            "val": "maps"
         },
         "var": ["map"]
      }]],
      "name": "findmap",
      "pagetype": {"event_expr": {
         "legacy": 1,
         "op": "pageview",
         "pattern": ".*",
         "type": "prim_event",
         "vars": []
      }},
      "state": "active"
   }],
   "ruleset_name": "a41x95"
}
