{
   "dispatch": [],
   "global": [
      {
         "cachable": {
            "period": "seconds",
            "value": "30"
         },
         "datatype": "JSON",
         "name": "maps",
         "source": "http://fmm.kynetx.com/lookup/",
         "type": "datasource"
      },
      {"emit": "\n\n/*\tProperty of Kynetx, Inc.\n *\n *\n *\tChangelog:\n *\t\tVersion 5144, Deployed on Tue, June 22, 2010\n *\t\t\t- Clicking and other events\n *\t\t\t- Unhighlighting forms which had data, but are then emptied out\n *\t\tVersion 5147, commited on Tue, June 22, 2010, 2:46 PM MST\n *\t\t\t- Nuking labels (Mostly for www.apple.com)\n *\n *\t\tVersion 5148, commited on Tue, June 22, 2010, 2:54 PM MST\n *\t\t\t- Phone Format nnn-nnn-nnnn\n *\t\t\t- Phone Format (nnn)nnn-nnnn\n *\t\tVersion 5149, commited on Tue, June 22, 2010, 3:02 PM MST\n *\t\t\t- Rearraged order of the formats to group new phone formats with the old ones.\n *\t\t\t- Fixed the slice statements in the new phone formats to be correct.\n *\t\tVersion 5150, commited on Tue, June 22, 2010, 3:11 PM MST\n *\t\t\t- Fixed me screwing up the slice on the phone formats. Changed from calling valuepassed(6,10) to valuepassed.slice(6,10)\n *\t\tVersion 5151, commited on Tue, June 22, 2010, 3:22 PM MST\n *\t\t\t- Changed order of some of the events (click, etc.) to be triggered AFTER the value is set. Also added other events (blur, keydown, etc.).\n *\t\tVersion 5152, commited on Wednesday, June 23, 2010, 11:48 PM MST\n *\t\t\t- Added \"!important\" to highlighting.\n *\t\t\t- Added \"CCType w/ AmericanExpress\" Credit Card Type format\n *\t\tVersion 5153, committed on Wednesday, June 23, 2010, 11:50 PM MST\n *\t\t\t- Added \";\" at the end of the \"!important\" for highlighting.\n *\t\tVersion 5154, committed on Wednesday, June 23, 2010, 1:20 PM MST\n *\t\t\t- Forgot to set done to true in the first drop down specialty try. Should help fix errors where things would fill, then unfill.\n *\t\tVersion 5162, committed on Wednesday, June 23, 2010, 1:43 PM MST\n *\t\t\t- Add an option to the map called no_change which causes the \"change\" event to not be fired on that element. Fixes state fields on TigerDirect and CircutCity.\n *\t\tVersion 5177, committed on Friday, June 25th, 2010, 11:59 AM MST\n *\t\t\t- Changed the \"onchange\" event to be disabled by default. The \"change\" event was causing a lot of issues. To enable change events, pass '\"change\":\"true\"'\n *\t\tVersion 5209, committed on Tuesday, June 29th, 2010, 11:23 AM MST\n *\t\t\t- Added better radio button support. Should cover most of them.\n *\t\tVersion 5214, committed on Tuesday, June 29th, 2010, 12:12 PM MST\n *\t\t\t- Changed logic to support radio buttons where the first element is not the one you want.\n *\t\tVersion 5219, committed on Wednesday, June 30th, 2010, 12:09 PM MST\n *\t\t\t- Changed drop down logic some to do better with optgroups.\n *\t\tVersion 5221, committed on Wednesday, June 30th, 2010, 12:21 PM MST\n *\t\t\t- Added \"CCType w/ AMEX and Master Card\" format.\n *\t\tVersion 5228, committed on Wednesday, July 6th, 2010, 8:00 PM MST\n *\t\t\t- Casted value as string aftef the KOBJ.formatData function call.\n *\t\tVersion 5232, committed on Wednesday, July 6th, 2010, 8:11 PM MST\n *\t\t\t- Compare as \"0\" rather than 0 on line 749.\n *\t\tVersion 5235, committed on Wednesday, July 6th, 2010, 8:13 PM MST\n *\t\t\t- Use .charAt(0) rather than [0] for IE on line 751, for www.diapers.com\n *\t\tVersion 5236, committed on Wednesday, July 6th, 2010, 8:15 PM MST\n *\t\t\t- Removed extra logging statements inserted in version 5232.\n *\t\tVersion 5242, committed on Wednesday, July 7th, 2010 at 9:08 AM MST\n *\t\t\t- Added \"CCType w/ AMEX and Master Card\" for www.childrensplace.com\n *\t\tVersion 5244, committed on Wednesday, July 7th, 2010 at 10:12 AM MST\n *\t\t\t- Added \"hidden\" type of form for pcconnection.com and pcconnectionexpress.com\n *\t\tVersion 5246, committed on Wednesday, July 7th, 2010 at 10:45 AM MST\n *\t\t\t- Added num2 format for www.pcconnection.com\n *\t\tVersion 5250, committed on Wednesday, July 7th 2010 at 1:28 PM CST\n *\t\t\t- Added num3 format for www.pcmall.com\n *\t\tVersion 5251, committed on Wednesday, July 7th 2010 at 2:21 PM CST\n *\t\t\t- Updated UnitedStates tag for www.singaporeair.com\n *\t\tVersion 5253, committed on Wednesday, July 7th, 2010 at 3:38 PM CST\n *\t\t\t- Added recognition of images in place of radio buttons\n *\t\tVersion 5264, committed on Thursday, July 8th, 2010 at 8:51 AM CST\n *\t\t\t- Fixed radio button for bhphotovideo.com\n *\t\tVersion 5273, committed on Thursday, July 8th, 2010 at 2:34 PM CST by JAM\n *\t\t\t- Refactored code which determines which type of element it is (radio button, select, text box, etc.). Done for www.bedbathandbeyond.com\n *\t\tVersion 52\n *\n */\n\n\t// Set up\n\t\n\tKOBJ.a41x88 = KOBJ.a41x88 || {};\n\tKOBJ.a41x88.forms = KOBJ.a41x88.forms || [];\n\n\t// Custom callback function which allows additional parameters.\n\n\tKOBJ.ff_logger = function(type,txn_id,url,element,sense,rule,rid,callback_info){\n\t\tvar logger_url= \"https://\" + KOBJ.callback_host+ \"/callback/\"+rid+\"?jsoncb=?&\"+rid+\"&type=\"+type+\"&txn_id=\"+txn_id+\"&rule=\"+rule;\n\t\tif(url){\n\t\t\tlogger_url+=\"&caller=\"+escape(url);\n\t\t}\n\t\tif(rid){\n\t\t\tlogger_url+=\"&rid=\"+rid;\n\t\t}\n\t\tif(element){\n\t\t\tlogger_url+=\"&element=\"+element;\n\t\t}\n\t\tif(sense){\n\t\t\tlogger_url+=\"&sense=\"+sense;\n\t\t}\n\t\tif(callback_info){\n\t\t\tlogger_url+=\"&message=\"+escape(callback_info);\n\t\t}\n\t\t$KOBJ.getJSON(logger_url,function(){});\n\t};\n\t\n\t/* Start of the formatting plugin */\n\n\t(function ($) {\n\t    $.format = (function () {\n\n\t\t\tvar parseMonth = function(value){\n\n\t\t\tswitch(value){\n\t\t\tcase \"Jan\":\n\t\t\t\treturn \"01\";\n\t\t\t\tbreak;\n\t\t\tcase \"Feb\":\n\t\t\t\treturn \"02\";\n\t\t\t\tbreak;\n\t\t\tcase \"Mar\":\n\t\t\t\treturn \"03\";\n\t\t\t\tbreak;\n\t\t\tcase \"Apr\":\n\t\t\t\treturn \"04\";\n\t\t\t\tbreak;\n\t\t\tcase \"May\":\n\t\t\t\treturn \"05\";\n\t\t\t\tbreak;\n\t\t\tcase \"Jun\":\n\t\t\t\treturn \"06\";\n\t\t\t\tbreak;\n\t\t\tcase \"Jul\":\n\t\t\t\treturn \"07\";\n\t\t\t\tbreak;\n\t\t\tcase \"Aug\":\n\t\t\t\treturn \"08\";\n\t\t\t\tbreak;\n\t\t\tcase \"Sep\":\n\t\t\t\treturn \"09\";\n\t\t\t\tbreak;\n\t\t\tcase \"Oct\":\n\t\t\t\treturn \"10\";\n\t\t\t\tbreak;\n\t\t\tcase \"Nov\":\n\t\t\t\treturn \"11\";\n\t\t\t\tbreak;\n\t\t\tcase \"Dec\":\n\t\t\t\treturn \"12\";\n\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn value;\n\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar parseTime = function(value){\n\t\t\t\tvar retValue = value;\n\t\t\t\tif(retValue.indexOf(\".\") != -1){\n\t\t\t\t\tretValue =  retValue.substring(0, retValue.indexOf(\".\"));\n\t\t\t\t}\n\n\t\t\tvar values3 = retValue.split(\":\");\n\n\t\t\tif(values3.length == 3){\n\t\t\t\thour\t\t= values3[0];\n\t\t\t\tminute\t\t= values3[1];\n\t\t\t\tsecond\t\t= values3[2];\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttime: retValue,\n\t\t\t\t\t\t\thour: hour,\n\t\t\t\t\t\t\tminute: minute,\n\t\t\t\t\t\t\tsecond: second\n\t\t\t\t\t};\n\t\t\t} else {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttime: \"\",\n\t\t\t\t\t\thour: \"\",\n\t\t\t\t\t\tminute: \"\",\n\t\t\t\t\t\tsecond: \"\"\n\t\t\t\t};\n\t\t\t}\n\t\t\t};\n\n\t\treturn {\n\t\t    date: function(value, format){\n\t\t\ttry{\n\t\t\t\tvar values = value.split(\" \");\n\t\t\t\tvar year \t\t= null;\n\t\t\t\tvar month \t\t= null;\n\t\t\t\tvar dayOfMonth \t= null;\n\t\t\t\tvar time \t\t= null;\n\n\t\t\t\tswitch(values.length){\n\t\t\t\tcase 6:\n\t\t\t\t\tyear \t\t= values[5];\n\t\t\t\t\tmonth \t\t= parseMonth(values[1]);\n\t\t\t\t\tdayOfMonth \t= values[2];\n\t\t\t\t\ttime\t\t= parseTime(values[3]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tvar values2 = values[0].split(\"-\");\n\t\t\t\t\tyear \t\t= values2[0];\n\t\t\t\t\tmonth \t\t= values2[1];\n\t\t\t\t\tdayOfMonth \t= values2[2];\n\t\t\t\t\ttime \t\t= parseTime(values[1]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tvar dates = value.split(\"/\");\n\t\t\t\t\tyear = dates[1];\n\t\t\t\t\tmonth = dates[0];\n\t\t\t\t\tdayOfMonth = \"00\";\n\t\t\t\t\ttime = parseTime(\"00:00:00.000\");\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn value;\n\t\t\t\tbreak;\n\t\t\t\t}\n\n\n\t\t\t\tvar pattern \t= \"\";\n\t\t\t\tvar retValue \t= \"\";\n\n\t\t\t\tfor(i = 0; i < format.length; i++){\n\t\t\t\t\tvar currentPattern = format.charAt(i);\n\t\t\t\t\tpattern += currentPattern;\n\t\t\t\t\tswitch(pattern){\n\t\t\t\t\tcase \"dd\":\n\t\t\t\t\t\tretValue += dayOfMonth;\n\t\t\t\t\t\tpattern   = \"\";\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"mM\":\n\t\t\t\t\t\tretValue += month.replace(/0/,\"\");\n\t\t\t\t\t\tpatern = \"\";\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"MM\":\n\t\t\t\t\t\tretValue += month;\n\t\t\t\t\t\tpattern   = \"\";\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"yyyy\":\n\t\t\t\t\t\tretValue += year;\n\t\t\t\t\t\tpattern   = \"\";\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"HH\":\n\t\t\t\t\t\tretValue += time.hour;\n\t\t\t\t\t\tpattern   = \"\";\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"hh\":\n\t\t\t\t\t\tretValue += time.hour;\n\t\t\t\t\t\tpattern   = \"\";\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"mm\":\n\t\t\t\t\t\tretValue += time.minute;\n\t\t\t\t\t\tpattern   = \"\";\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"ss\":\n\t\t\t\t\t\tretValue += time.second;\n\t\t\t\t\t\tpattern   = \"\";\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase \" \":\n\t\t\t\t\t\tretValue += currentPattern;\n\t\t\t\t\t\tpattern   = \"\";\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"/\":\n\t\t\t\t\t\tretValue += currentPattern;\n\t\t\t\t\t\tpattern   = \"\";\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase \":\":\n\t\t\t\t\t\tretValue += currentPattern;\n\t\t\t\t\t\tpattern   = \"\";\n\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif(pattern.length == 2 && pattern.indexOf(\"y\") != 0){\n\t\t\t\t\t\t\tretValue += pattern.substring(0, 1);\n\t\t\t\t\t\t\tpattern = pattern.substring(1, 2);\n\t\t\t\t\t\t} else if((pattern.length == 3 && pattern.indexOf(\"yyy\") == -1)){\n\t\t\t\t\t\t\tpattern   = \"\";\n\t\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t    }\n\t\t\t\treturn retValue;\n\t\t\t} catch(e) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\t}\n\t\t};\n\t    })();\n\t}($KOBJ));\n\n\t/* End of formatting plugin */\n\n\n\n\n\t/* Storage for states... */\n\n\n\tKOBJ.stateMap = {\n\n\t\"AL\":\"ALABAMA\",\n\n\t\"AK\":\"ALASKA\",\n\n\t\"AS\":\"AMERICAN SAMOA\",\n\n\t\"AZ\":\"ARIZONA\",\n\n\t\"AR\":\"ARKANSAS\",\n\n\t\"CA\":\"CALIFORNIA\",\n\n\t\"CO\":\"COLORADO\",\n\n\t\"CT\":\"CONNECTICUT\",\n\n\t\"DE\":\"DELAWARE\",\n\n\t\"DC\":\"DISTRICT OF COLUMBIA\",\n\n\t\"FM\":\"FEDERATED STATES OF MICRONESIA\",\n\n\t\"FL\":\"FLORIDA\",\n\n\t\"GA\":\"GEORGIA\",\n\n\t\"GU\":\"GUAM\",\n\n\t\"HI\":\"HAWAII\",\n\n\t\"ID\":\"IDAHO\",\n\n\t\"IL\":\"ILLINOIS\",\n\n\t\"IN\":\"INDIANA\",\n\n\t\"IA\":\"IOWA\",\n\n\t\"KS\":\"KANSAS\",\n\n\t\"KY\":\"KENTUCKY\",\n\n\t\"LA\":\"LOUISIANA\",\n\n\t\"ME\":\"MAINE\",\n\n\t\"MH\":\"MARSHALL ISLANDS\",\n\n\t\"MD\":\"MARYLAND\",\n\n\t\"MA\":\"MASSACHUSETTS\",\n\n\t\"MI\":\"MICHIGAN\",\n\n\t\"MN\":\"MINNESOTA\",\n\n\t\"MS\":\"MISSISSIPPI\",\n\n\t\"MO\":\"MISSOURI\",\n\n\t\"MT\":\"MONTANA\",\n\n\t\"NE\":\"NEBRASKA\",\n\n\t\"NV\":\"NEVADA\",\n\n\t\"NH\":\"NEW HAMPSHIRE\",\n\n\t\"NJ\":\"NEW JERSEY\",\n\n\t\"NM\":\"NEW MEXICO\",\n\n\t\"NY\":\"NEW YORK\",\n\n\t\"NC\":\"NORTH CAROLINA\",\n\n\t\"ND\":\"NORTH DAKOTA\",\n\n\t\"MP\":\"NORTHERN MARIANA ISLANDS\",\n\n\t\"OH\":\"OHIO\",\n\n\t\"OK\":\"OKLAHOMA\",\n\n\t\"OR\":\"OREGON\",\n\n\t\"PW\":\"PALAU\",\n\n\t\"PA\":\"PENNSYLVANIA\",\n\n\t\"PR\":\"PUERTO RICO\",\n\n\t\"RI\":\"RHODE ISLAND\",\n\n\t\"SC\":\"SOUTH CAROLINA\",\n\n\t\"SD\":\"SOUTH DAKOTA\",\n\n\t\"TN\":\"TENNESSEE\",\n\n\t\"TX\":\"TEXAS\",\n\n\t\"UT\":\"UTAH\",\n\n\t\"VT\":\"VERMONT\",\n\n\t\"VI\":\"VIRGIN ISLANDS\",\n\n\t\"VA\":\"VIRGINIA\",\n\n\t\"WA\":\"WASHINGTON\",\n\n\t\"WV\":\"WEST VIRGINIA\",\n\n\t\"WI\":\"WISCONSIN\",\n\n\t\"WY\":\"WYOMING\"\n\n\t};\n\n\t/* And now country */\n\n\tKOBJ.countryCodes = {\n\n\t\t\"USA\":{\n\t\t\t\"Long\":\"United States of America\",\n\t\t\t\"Short\":\"United States\",\n\t\t\t\"CC\":\"US\",\n\t\t\t\"CCC\":\"USA\",\n\t\t\t\"cc\":\"us\",\n\t\t\t\"ccc\":\"usa\",\n                        \"noSpace\":\"UnitedStates\"\n\t\t},\n\n\t\t\"US\":{\n\t\t\t\"Long\":\"United States of America\",\n\t\t\t\"Short\":\"United States\",\n\t\t\t\"CC\":\"US\",\n\t\t\t\"CCC\":\"USA\",\n\t\t\t\"cc\":\"us\",\n\t\t\t\"ccc\":\"usa\",\n                        \"noSpace\":\"UnitedStates\"\n\t\t}\n\n\t};\n\n\t/* And credit cards */\n\n\tKOBJ.creditCards = {\n\n\t\t\"Visa\": {\n\t\t\t\"CT\":\"VI\",\n\t\t\t\"VC\":\"VC\",\n\t\t\t\"CCType\":\"Visa\",\n\t\t\t\"CCType w/ AMEX\":\"Visa\",\n\t\t\t\"CCTYPE\":\"VISA\",\n\t\t\t\"VS\":\"VS\",\n\t\t\t\"CC Type\":\"Visa\",\n\t\t\t\"amex\":\"visa\",\n\t\t\t\"CCType w/ AmericanExpress\":\"Visa\",\n\t\t\t\"CCType w/ AMEX and Master Card\":\"Visa\",\n\t\t\t\"num\":\"1\",\n\t\t\t\"num2\":\"5\",\n\t\t\t\"num3\":\"2\"\n\t\t},\n\n\t\t\"American Express\": {\n\t\t\t\"CT\":\"AX\",\n\t\t\t\"VC\":\"AX\",\n\t\t\t\"CCType\":\"American Express\",\n\t\t\t\"CCType w/ AMEX\":\"AMEX\",\n\t\t\t\"CCTYPE\":\"AMERICAN EXPRESS\",\n\t\t\t\"VS\":\"AE\",\n\t\t\t\"CC Type\":\"American Express\",\n\t\t\t\"amex\":\"amex\",\n\t\t\t\"CCType w/ AmericanExpress\":\"AmericanExpress\",\n\t\t\t\"CCType w/ AMEX and Master Card\":\"AMEX\",\n\t\t\t\"num\":\"4\",\n\t\t\t\"num2\":\"8\",\n\t\t\t\"num3\":\"1\"\n\t\t},\n\n\t\t\"Discover\": {\n\t\t\t\"CT\":\"DI\",\n\t\t\t\"VC\":\"VC\",\n\t\t\t\"CCType\":\"Discover\",\n\t\t\t\"CCType w/ AMEX\":\"Discover\",\n\t\t\t\"CCTYPE\":\"DISCOVER\",\n\t\t\t\"VS\":\"DC\",\n\t\t\t\"CC Type\":\"Discover\",\n\t\t\t\"amex\":\"disc\",\n\t\t\t\"CCType w/ AmericanExpress\":\"Discover\",\n\t\t\t\"CCType w/ AMEX and Master Card\":\"Discover\",\n\t\t\t\"num\":\"3\",\n\t\t\t\"num2\":\"3\",\n\t\t\t\"num3\":\"8\"\n\t\t},\n\t\t\n\t\t\"MasterCard\": {\n\t\t\t\"CT\":\"MC\",\n\t\t\t\"VC\":\"VC\",\n\t\t\t\"CCType\":\"MasterCard\",\n\t\t\t\"CCType w/ AMEX\":\"MasterCard\",\n\t\t\t\"CCTYPE\":\"MASTERCARD\",\n\t\t\t\"VS\":\"MC\",\n\t\t\t\"CC Type\":\"Master Card\",\n\t\t\t\"amex\":\"mc\",\n\t\t\t\"CCType w/ AmericanExpress\":\"MasterCard\",\n\t\t\t\"CCType w/ AMEX and Master Card\":\"Master Card\",\n\t\t\t\"num\":\"2\",\n\t\t\t\"num2\":\"7\",\n\t\t\t\"num3\":\"4\"\n\t\t}\n\n\t};\n\n  KOBJ.creditCards[\"1\"] = KOBJ.creditCards[\"Visa\"];\n  KOBJ.creditCards[\"2\"] = KOBJ.creditCards[\"American Express\"];\t\n  KOBJ.creditCards[\"3\"] = KOBJ.creditCards[\"Discover\"];\n  KOBJ.creditCards[\"4\"] = KOBJ.creditCards[\"MasterCard\"];\n\n\t/* And dates. This isn't being used currently. */\n\n\tKOBJ.dates = {\n\t\t\"months\":{\n\t\t\t\"01\":{\"Mon\":\"Jan\"},\n\t\t\t\"02\":{\"Mon\":\"Feb\"},\n\t\t\t\"03\":{\"Mon\":\"Mar\"},\n\t\t\t\"04\":{\"Mon\":\"Apr\"},\n\t\t\t\"05\":{\"Mon\":\"May\"},\n\t\t\t\"06\":{\"Mon\":\"Jun\"},\n\t\t\t\"07\":{\"Mon\":\"Jul\"},\n\t\t\t\"08\":{\"Mon\":\"Aug\"},\n\t\t\t\"09\":{\"Mon\":\"Sep\"},\n\t\t\t\"10\":{\"Mon\":\"Oct\"},\n\t\t\t\"11\":{\"Mon\":\"Nov\"},\n\t\t\t\"12\":{\"Mon\":\"Dec\"}\n\t\t}\n\t};\n\n\t/*\n\t  Functions to look up the different datatypes.\n\t  I want to consolidate these into one function\n\t  which takes an additional parameter which determines\n\t  which data to look at...\n\t*/\n\n\tKOBJ.STToState = function(val){\n\t\tvar lookedUp = KOBJ.stateMap[val.toUpperCase()];\n\t\tif(lookedUp){\n\t\t\treturn lookedUp;\n\t\t}\n\t\treturn val;\n\t};\n\n\tKOBJ.countryCodeToCountry = function(val,format){\n\t\tvar lookedUp = KOBJ.countryCodes[val][format];\n\n\t\tif(lookedUp){\n\t\t\treturn lookedUp;\n\t\t}\n\t\treturn val;\n\t};\n\n\tKOBJ.creditCardFormatter = function(value, format){\n\t\tvar lookedUp = KOBJ.creditCards[value][format];\n\n\t\tif(lookedUp){\n\t\t\treturn lookedUp;\n\t\t}\n\t\treturn val;\n\t};\n\n\tKOBJ.getMonthName = function(value,format) {\n\t\tvar lookedUp = KOBJ.dates.months[value.split(\"/\")[0]][format];\n\n\t\tif(lookedUp){\n\t\t\treturn lookedUp;\n\t\t}\n\t\treturn val;\n\t};\n\n\t// Inserts the map into an array.\n\n\tKOBJ.setFormMaps = function(mapToPush,config){\n\t\tmapToPush = {\"map\":mapToPush,\"config\":config};\n\t\tKOBJ.a41x88.forms.push(mapToPush);\n\t};\n\n\t// Defaults.\n\tKOBJ.fillFormsDefault = {\n\t\t\"fillCSS\": {},\n\t\t\"highlight-color\":\"#FFFFCC\",\n\t\t\"className\":\"VisaRightCliqHighLight\",\n\t\t\"cburl\":\"https://fmm.kynetx.com/reporterror\"\n\t};\n\n\t/*\n\t   Takes data and format and fetches the correct data.\n\t   I may eventually consolidate the KOBJ.countryCodeToCountry, etc.\n\t   into this function.\n\t*/\n\n\tKOBJ.formatData = function(formatpassed,valuepassed){\n\t\tvar valToBe, tempVal;\n\t\tvaluepassed = String(valuepassed);\n\t\tswitch(formatpassed){\n\t\t\tcase \"none\":\n\t\t\t\tvalToBe = valuepassed;\n\t\t\tbreak;\n\t\t\t\n\t\t\tcase \"area\":\n\t\t\t\tvalToBe = valuepassed.slice(0,3);\n\t\t\tbreak;\n\n\t\t\tcase \"first-3\":\n\t\t\t\tvalToBe = valuepassed.slice(3,6);\n\t\t\tbreak;\n\n\t\t\tcase \"last-4\":\n\t\t\t\tvalToBe = valuepassed.slice(6,10);\n\t\t\tbreak;\n\n\t\t\tcase \"last-7\":\n\t\t\t\tvalToBe = valuepassed.slice(3,10);\n\t\t\tbreak;\n\n\t\t\tcase \"(nnn)nnn-nnnn\":\n\t\t\t\tvalToBe = \"(\"+valuepassed.slice(0,3)+\")\"+valuepassed.slice(3,6)+\"-\"+valuepassed.slice(6,10);\n\t\t\tbreak;\n\n\t\t\tcase \"nnn-nnn-nnnn\":\n\t\t\t\tvalToBe = valuepassed.slice(0,3)+\"-\"+valuepassed.slice(3,6)+\"-\"+valuepassed.slice(6,10);\n\t\t\tbreak;\n\n\t\t\tcase \"all\":\n\t\t\t\tvalToBe = valuepassed;\n\t\t\tbreak;\n\n\t\t\tcase \"ST\":\n\t\t\t\tvalToBe = valuepassed;\n\t\t\tbreak;\n\n\t\t\tcase \"State\":\n\t\t\t\tvalToBe = KOBJ.STToState(valuepassed);\n\t\t\tbreak;\n\n\t\t\tcase \"ST - State\":\n\t\t\t\tvalToBe = valuepassed + ' - ' + KOBJ.STToState(valuepassed);\n\t\t\tbreak;\n\n\t\t\tcase \"STATE\":\n\t\t\t\tvalToBe = KOBJ.STToState(valuepassed).toUpperCase();\n\t\t\tbreak;\n\n\t\t\tcase \"Long\":\n\t\t\t\tvalToBe = KOBJ.countryCodeToCountry(valuepassed,formatpassed);\n\t\t\tbreak;\n\n\t\t\tcase \"Short\":\n\t\t\t\tvalToBe = KOBJ.countryCodeToCountry(valuepassed,formatpassed);\n\t\t\tbreak;\n\n\t\t\tcase \"CC\":\n\t\t\t\tvalToBe = KOBJ.countryCodeToCountry(valuepassed,formatpassed);\n\t\t\tbreak;\n\n\t\t\tcase \"CCC\":\n\t\t\t\tvalToBe = KOBJ.countryCodeToCountry(valuepassed,formatpassed);\n\t\t\tbreak;\n\n                        case \"noSpace\":\n\t\t\t\tvalToBe = KOBJ.countryCodeToCountry(valuepassed, formatpassed);\n\t\t\tbreak;\n\t\t\t\n\t\t\tcase \"cc\":\n\t\t\t\tvalToBe = KOBJ.countryCodeToCountry(valuepassed,formatpassed);\n\t\t\tbreak;\n\n\t\t\tcase \"ccc\":\n\t\t\t\tvalToBe = KOBJ.countryCodeToCountry(valuepassed,formatpassed);\n\t\t\tbreak;\n\n\t\t\tcase \"CCType\":\n\t\t\t\tvalToBe = KOBJ.creditCardFormatter(valuepassed,formatpassed);\n\t\t\tbreak;\n\n\t\t\tcase \"CCType w/ AMEX\":\n\t\t\t\tvalToBe = KOBJ.creditCardFormatter(valuepassed,formatpassed);\n\t\t\tbreak;\n\t\t\tcase \"CC Type\":\n\t\t\t\tvalToBe = KOBJ.creditCardFormatter(valuepassed,formatpassed);\n\t\t\tbreak;\n\n\t\t\tcase \"CCTYPE\":\n\t\t\t\tvalToBe = KOBJ.creditCardFormatter(valuepassed,formatpassed);\n\t\t\tbreak;\n\n\t\t\tcase \"CT\":\n\t\t\t\tvalToBe = KOBJ.creditCardFormatter(valuepassed,formatpassed);\n\t\t\tbreak;\n\n\t\t\tcase \"VC\":\n\t\t\t\tvalToBe = KOBJ.creditCardFormatter(valuepassed,formatpassed);\n\t\t\tbreak;\n\n\t\t\tcase \"VS\":\n\t\t\t\tvalToBe = KOBJ.creditCardFormatter(valuepassed,formatpassed);\n\t\t\tbreak;\n\n\t\t\tcase \"amex\":\n\t\t\t\tvalToBe = KOBJ.creditCardFormatter(valuepassed,formatpassed);\n\t\t\tbreak;\n\n\t\t\tcase \"CCType w/ AmericanExpress\":\n\t\t\t\tvalToBe = KOBJ.creditCardFormatter(valuepassed,formatpassed);\n\t\t\tbreak;\n\n\t\t\tcase \"CCType w/ AMEX and Master Card\":\n\t\t\t\tvalToBe = KOBJ.creditCardFormatter(valuepassed,formatpassed);\n\t\t\tbreak;\n\n\t\t\tcase \"num\":\n\t\t\t\tvalToBe = KOBJ.creditCardFormatter(valuepassed,formatpassed);\n\t\t\tbreak;\n\n\t\t\tcase \"num2\":\n\t\t\t\tvalToBe = KOBJ.creditCardFormatter(valuepassed,formatpassed);\n\t\t\tbreak;\t\n\t\t\t\t\n\t\t\tcase \"num3\":\n\t\t\t\tvalToBe = KOBJ.creditCardFormatter(valuepassed,formatpassed);\n\t\t\tbreak;\t\n\n\t\t\tcase \"MMyy\":\n\t\t\t\tvalToBe = $KOBJ.format.date(valuepassed,\"MM\") + $KOBJ.format.date(valuepassed,\"yyyy\").slice(2);\n\t\t\tbreak;\n\n\t\t\tcase \"yy\":\n\t\t\t\tvalToBe = $KOBJ.format.date(valuepassed,\"yyyy\").slice(2,4);\n\t\t\tbreak;\n\n\t\t\tcase \"y,yyy\":\n\t\t\t\ttempVal = $KOBJ.format.date(valuepassed,\"yyyy\");\n\t\t\t\tvalToBe = tempVal.slice(0,1) + ',' + tempVal.slice(1);\n\t\t\tbreak;\n\n\t\t\tcase \"mM\":\n\t\t\t\ttempVal = $KOBJ.format.date(valuepassed,\"MM\");\n\t\t\t\tif(tempVal.charAt(0) == \"0\"){\n\t\t\t\t\tvalToBe = tempVal.charAt(1);\n\t\t\t\t} else {\n\t\t\t\t\tvalToBe = tempVal;\n\t\t\t\t}\n\t\t\tbreak;\n\n\t\t\tcase \"Mon\":\n\t\t\t\tvalToBe = KOBJ.getMonthName(valuepassed,formatpassed);\n\t\t\tbreak;\n\n\t\t\tcase \"first-group\":\n\t\t\t\tvalToBe = valuepassed.slice(0,4);\n\t\t\tbreak;\n\n\t\t\tcase \"second-group\":\n\t\t\t\tvalToBe = valuepassed.slice(4,8);\n\t\t\tbreak;\n\n\t\t\tcase \"third-group\":\n\t\t\t\tvalToBe = valuepassed.slice(8,12);\n\t\t\tbreak;\n\n\t\t\tcase \"last-group\":\n\t\t\t\tvalToBe = valuepassed.slice(12);\n\t\t\tbreak;\n\n\t\t\tcase \"fullname\":\n\t\t\t\tvalToBe = valuepassed;\n\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tvalToBe = $KOBJ.format.date(valuepassed,formatpassed);\n\t\t\tbreak;\n\t\t}\n\n\t\tif(valToBe){\n\t\t\treturn valToBe;\n\t\t}\n\t\treturn false;\n\t};\n\n\n\n\t// This function allows me to trigger javascript events from within Visa's Sandbok.\n\tKOBJ.fireEvent = function(element,event){\n\t\t// Get the DOM element\n\t\telement = $KOBJ(element)[0];\n\n\t\t// KOBJ.document is used so that the event is on the correct document.\n\t\tif(KOBJ.document.createEvent){\n\t\t\t// events for firefox + others\n\t\t\tvar evt = KOBJ.document.createEvent(\"HTMLEvents\");\n\t\t\tevt.initEvent(event, true, true ); // event type,bubbling,cancelable\n\t\t\treturn !element.dispatchEvent(evt);\n\t\t} else if (KOBJ.document.createEventObject){\n\t\t\t// dispatch for IE\n\t\t\tvar evt = KOBJ.document.createEventObject();\n\t\t\treturn element.fireEvent('on'+event,evt);\n\t\t} else {\n\t\t\tthrow \"Couldn't fire event\" + event;\n\t\t}\n\t};\n\n\t// Coverts JS objects to CSS.\n\tKOBJ.objToCSS = function(obj){\n\t\tif(typeof(obj)===\"object\"){\n\t\t\tvar styleStr = \"{\";\n\t\t\t$KOBJ.each(obj,function(key,value){\n\t\t\t\tstyleStr += key + \":\" + value + \";\"\n\t\t\t});\n\t\t\tstyleStr += \"}\";\n\t\t\treturn styleStr;\n\t\t}\n\t\treturn \"{}\";\n\t};\n\n\t// Puts the CSS into the page so that highlighting can occur. Adapted from the original KOBJ.css.\n\n\tKOBJ.css = function(css,doc){\n\t\t// Make sure that doc is the right one.\n\t\tdoc = doc ? doc : KOBJ.document;\n\t\tvar head=doc.getElementsByTagName('head')[0];\n\t\tvar style=doc.createElement('style');\n\t\tvar rules=doc.createTextNode(css);\n\t\tstyle.type='text/css';\n\t\tstyle.id='KOBJ_stylesheet';\n\t\tvar KOBJstyle=doc.getElementById('KOBJ_stylesheet');\n\t\tif(KOBJstyle==null){\n\t\t\tif(style.styleSheet){\n\t\t\t\tstyle.styleSheet.cssText=rules.nodeValue;\n\t\t\t} else {\n\t\t\t\tstyle.appendChild(rules);\n\t\t\t}\n\t\t\t\n\t\t\thead.appendChild(style);\n\t\t} else {\n\t\t\tif(KOBJstyle.styleSheet){\n\t\t\t\tKOBJstyle.styleSheet.cssText+=rules.nodeValue;\n\t\t\t} else {\n\t\t\t\tKOBJstyle.appendChild(rules);\n\t\t\t}\n\t\t}\n\t};\n\n\t// The main function. Takes data from Visa and fills the forms with said data.\n\tKOBJ.fillForms = function(formData, configuration){\n\n\t\tvar defaults = $KOBJ.extend(true, {}, KOBJ.fillFormsDefault);\n\n\t\t// Extends the configuration object, defaults.\n\t\tif(typeof(configuration) === \"object\"){\n\t\t\t$KOBJ.extend(true, defaults, configuration);\n\t\t}\n\n\t\t// Set highlight color\n\t\tif(defaults[\"highlight-color\"]){\n\t\t\tdefaults.fillCSS[\"background-color\"] = defaults[\"highlight-color\"] + \"!important\";\n\t\t}\n\n\t\tvar maxLengthURL = KOBJ.maxURLLength;\n\n\t\t// Get the last item stuck into the array\n\t\tvar forms = KOBJ.a41x88.forms[KOBJ.a41x88.forms.length - 1];\n\t\tif(typeof forms.config === \"object\"){\n\t\t\t$KOBJ.extend(defaults,forms.config,true);\n\t\t}\n\n\t\t// Set data\n\t\tvar formMap = forms.map;\n\t\tvar stateArray = [];\n\t\tvar errorState, anyError = false;\n\t\tvar wanted = 0;\n\t\tvar successes = 0;\n\t\tvar noData = 0;\n\t\tvar errors = 0;\n\n\t\tKynetxFormDebug(\"Map: \" + $KOBJ.compactJSON(formMap) + \"\\nForm Data: \" + $KOBJ.compactJSON(formData));\n\t\n\t\t//Each over each of the maps in the formMap array\n\t\t$KOBJ.each(formMap,function (index, thismap) {\n\t\t\ttry{\n\n\t\t\t\tKynetxFormDebug(\"Trying to fill for object: \" + $KOBJ.compactJSON(thismap));\n\n\t\t\t\terrorState = false;\n\t\t\t\tvar selector = thismap.selector;\n\t\t\t\tvar iframe = thismap.iframe;\n\t\t\t\tvar frame = thismap.frame;\n\t\t\t\tvar mapTo = thismap.map;\n\t\t\t\tvar format = thismap.format;\n\t\t\t\tvar mapArray = mapTo.split(\".\");\n\n\t\t\t\tvar value;\n\n\t\t\t\t// Checks to see if the data is available.\n\t\t\t\t// TODO: Stick into function. Make fullname a different case.\n\t\t\t\tif((typeof(formData[mapArray[0]]) !== \"undefined\" && typeof(formData[mapArray[0]][mapArray[1]]) !== \"undefined\") || (format === \"fullname\" && (typeof(formData[mapArray[0]]) !== \"undefined\" && typeof(formData[mapArray[0]][\"firstname\"]) !== \"undefined\" && typeof(formData[mapArray[0]][\"lastname\"]) !== \"undefined\"))){ \n\t\t\t\t\tif(typeof(formData[mapArray[0]][mapArray[1]]) !== \"undefined\" || format == \"fullname\"){\n\t\t\t\t\t\tif(format == \"fullname\"){\n\t\t\t\t\t\t\tvalue = String(formData[mapArray[0]][\"firstname\"] + \" \" + formData[mapArray[0]][\"lastname\"]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvalue = String(formData[mapArray[0]][mapArray[1]]);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow \"no data\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar element;\n\t\t\t\tvar frameObj;\n\t\t\t\tvar doc = KOBJ.document;\n\n\t\t\t\tfunction getFrameDoc(selector, tryDoc){\n\n\t\t\t\t\tvar returnDoc,aDoc;\n\n\t\t\t\t\tif(!selector){ // If selector string is empty/undefined, return (base case)\n\t\t\t\t\t\treturn tryDoc;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar selectorArray = selector.split(\"|\"); // Split the string. '|' (bar/pipe) is the delimiter I chose because as far as I know of, nothing uses it in jQuery, etc.\n\t\t\t\t\tvar selStr = \"\";\n\n\t\t\t\t\t// Put together the \"new\" selector string.\n\t\t\t\t\t$KOBJ.each(selectorArray, function(index, value){\n\t\t\t\t\t\tif(index !== 0){\n\t\t\t\t\t\t\tselStr += value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t// Grab the frame out of the correct document.\n\t\t\t\t\tvar frame = $KOBJ(selectorArray[0],tryDoc);\n\n\t\t\t\t\tif(!frame.length){\n\t\t\t\t\t\tthrow \"Frame does not exist\";\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get the document of the frame.\n\t\t\t\t\tif(frame[0].contentDocument){\n\t\t\t\t\t\taDoc = frame[0].contentDocument;\n\t\t\t\t\t} else if(wex && wex.getFrameContents(frame[0])){\n\t\t\t\t\t\taDoc = frame[0].contentDocument;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Recurse. If selectorArray's length is one, selStr will be empty causing getFrameDoc to return aDoc.\n\t\t\t\t\tif(selectorArray.length){\n\t\t\t\t\t\treturnDoc = getFrameDoc(selStr,aDoc);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn returnDoc;\n\t\t\t\t}\n\n\t\t\t\t// Is there a frame or iframe set in the map?\n\t\t\t\tif(frame || iframe){\n\t\t\t\t\t// Use the (i)frame selector to get the (i)frame.\n\t\t\t\t\tif(frame){\n\t\t\t\t\t\tdoc = getFrameDoc(frame, KOBJ.document);\n\t\t\t\t\t} else if(iframe){\n\t\t\t\t\t\tdoc = getFrameDoc(iframe, KOBJ.document);\n\t\t\t\t\t}\n\t\t\t\t\telement = $KOBJ(selector, doc);\n\t\t\t\t} else {\n\t\t\t\t\t// If there is no iframe, the just jQuerify the selector\n\t\t\t\t\telement = $KOBJ(selector);\n\t\t\t\t}\n\n\t\t\t\t// If \"\" is passed in, the form is cleared and the highlighting removed. If it is undefined, \"no data\" is thrown.\n\n\t\t\t\tif(typeof(value) === \"string\"){\n\t\t\t\t\twanted++;\n\t\t\t\t\t// TODO: combine element and element.length checks\n\t\t\t\t\tif(element){\n\t\t\t\t\t\tif(element.length){\n\t\t\t\t\t\t\tif(format){\n\t\t\t\t\t\t\t\tKynetxFormDebug(\"format: \"+ format + \"\\nvalue: \" + value);\n\t\t\t\t\t\t\t\t// Format the data correctly\n\t\t\t\t\t\t\t\tvalue = String(KOBJ.formatData(format,value));\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Insert the stylesheet into the correct place. doc will be the document for the (i)frame so that the CSS gets put into the right spot.\n\t\t\t\t\t\t\t// TODO: If there is an app already on page using CSS, the highlighting will not occur\n\t\t\t\t\t\t\tif(!$KOBJ(\"#KOBJ_stylesheet\",doc).length){\n\t\t\t\t\t\t\t\tKOBJ.css(\".\"+ defaults.className + \" \" + KOBJ.objToCSS(defaults.fillCSS) ,doc);\n\t\t\t\t\t\t\t\tKOBJ.a41x88.css = true;\n\t\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t\t// Checks to see if the formatting didn't cause value to be nonexistent.\n\t\t\t\t\t\t\tif(typeof(value) === \"string\"){\n\t\t\t\t\t\t\t\tvar addCSS = true;\n\n\t\t\t\t\t\t\t\tif(!thismap.no_click){\n\t\t\t\t\t\t\t\t\tKOBJ.fireEvent(element,\"click\");\n\t\t\t\t\t\t\t\t\tKOBJ.fireEvent(element,\"focus\");\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvar typeOfElement = \"\";\n\n\t\t\t\t\t\t\t\t$KOBJ.each(element, function(index, testElement){\n\t\t\t\t\t\t\t\t\tif(!testElement.tagName){\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif(testElement.tagName.toUpperCase() == \"INPUT\" && (testElement.type == \"HIDDEN\"  || testElement.type == \"TEXT\")){\n\t\t\t\t\t\t\t\t\t\ttypeOfElement = \"text\";\n\t\t\t\t\t\t\t\t\t} else if(testElement.tagName.toUpperCase() == \"SELECT\"){\n\t\t\t\t\t\t\t\t\t\ttypeOfElement = \"select\";\n\t\t\t\t\t\t\t\t\t} else if(testElement.tagName.toUpperCase() == \"INPUT\" && testElement.type.toUpperCase() == \"RADIO\"){\n\t\t\t\t\t\t\t\t\t\ttypeOfElement = \"radio\";\n\t\t\t\t\t\t\t\t\t} else if(testElement.tagName.toUpperCase() == \"DIV\"){\n\t\t\t\t\t\t\t\t\t\ttypeOfElement = \"div\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tif(typeOfElement == \"text\"){ // If the element is a normal text box, try normal stuff\n\t\t\t\t\t\t\t\t\telement.val(value);\n\t\t\t\t\t\t\t\t} else if(typeOfElement == \"select\"){ // If the element is a select, do drop down specialties\n\t\t\t\t\t\t\t\t\tvar done = false;\n\n\t\t\t\t\t\t\t\t\tKynetxFormDebug(\"Drop down specialties.\");\n\t\t\t\t\t\t\t\t\t// If the value is exactly equal to an option's value in the select box\n\t\t\t\t\t\t\t\t\t$KOBJ.each($KOBJ(\"option\",element),function(){\n\t\t\t\t\t\t\t\t\t\tvar select = $KOBJ(this);\n\t\t\t\t\t\t\t\t\t\tvar selectVal = String(select.attr(\"value\"));\n\t\t\t\t\t\t\t\t\t\tvar text = select.text().replace(/(?:^\\s+|^)(.*?)(?:\\s+$|$)/,\"$1\").toUpperCase();\n\n\t\t\t\t\t\t\t\t\t\t// Calling .toUpperCase makes the check be case insensitive\n\t\t\t\t\t\t\t\t\t\tif(selectVal.toUpperCase() == value.toUpperCase() || text == value.toUpperCase()){\n\t\t\t\t\t\t\t\t\t\t\tselect.attr(\"selected\",\"true\");\n\t\t\t\t\t\t\t\t\t\t\tKynetxFormDebug(\"Selected \" + text + \", either \" + text + \" or \" + selectVal + \" matched \" + value);\n\t\t\t\t\t\t\t\t\t\t\tdone = true;\n\t\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t// If the exact lookup failed, try a case insensitive regex.\n\t\t\t\t\t\t\t\t\tif(!done){\n\t\t\t\t\t\t\t\t\t\t$KOBJ.each($KOBJ(\"option\",element),function(){\n\t\t\t\t\t\t\t\t\t\t\tvar select = $KOBJ(this);\n\t\t\t\t\t\t\t\t\t\t\tvar selectVal = select.val();\n\t\t\t\t\t\t\t\t\t\t\tvar text = select.text().replace(/(?:^\\s+|^)(.*?)(?:\\s+$|$)/,\"$1\");\n\t\t\t\t\t\t\t\t\t\t\tvar regex = new RegExp(\"^\"+value+\"$\",\"i\");\n\t\t\t\t\t\t\t\t\t\t\tif(selectVal.search(regex) > -1 || text.search(regex) > -1){\n\t\t\t\t\t\t\t\t\t\t\t\tselect.attr(\"selected\",\"true\");\n\t\t\t\t\t\t\t\t\t\t\t\tKynetxFormDebug(\"Selected \" + text + \", it has the regex \" + regex);\n\t\t\t\t\t\t\t\t\t\t\t\tdone = true;\n\t\t\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// If the case insensitive regex failed, just look to see if an option's value contains the value wanted.\n\t\t\t\t\t\t\t\t\t// Catch all so that we may get it right. Selects Arkansas rather than Kansas, though.\n\t\t\t\t\t\t\t\t\tif(!done){\n\t\t\t\t\t\t\t\t\t\t$KOBJ.each($KOBJ(\"option\",element),function(){\n\t\t\t\t\t\t\t\t\t\t\tvar select = $KOBJ(this);\n\t\t\t\t\t\t\t\t\t\t\tvar selectVal = select.val();\n\t\t\t\t\t\t\t\t\t\t\tvar text = select.text().replace(/(?:^\\s+|^)(.*?)(?:\\s+$|$)/,\"$1\");\n\t\t\t\t\t\t\t\t\t\t\tvar regex = new RegExp(value,\"i\");\n\t\t\t\t\t\t\t\t\t\t\tif(selectVal.search(regex) > -1 || text.search(regex) > -1){\n\t\t\t\t\t\t\t\t\t\t\t\tselect.attr(\"selected\",\"true\");\n\t\t\t\t\t\t\t\t\t\t\t\tKynetxFormDebug(\"Selected \" + text + \", it has the regex \" + regex);\n\t\t\t\t\t\t\t\t\t\t\t\tdone = true;\n\t\t\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// If the element is a radio button...\n\t\t\t\t\t\t\t\t} else if(typeOfElement == \"radio\"){\n\n\t\t\t\t\t\t\t\t\tKynetxFormDebug(\"Trying Radio Specialties\");\n\t\t\t\t\t\t\t\t\tvar regex = new RegExp(value,\"i\");\n\t\t\t\t\t\t\t\t\tvar done = false;\n\n\t\t\t\t\t\t\t\t\t// Check the radio button's value attributes\n\t\t\t\t\t\t\t\t\tif($K(element).length > 1){\n\t\t\t\t\t\t\t\t\t\t$K.each($K(element),function(){\n\t\t\t\t\t\t\t\t\t\t\tvar select = false;\n\t\t\t\t\t\t\t\t\t\t\tvar radio = $KOBJ(this);\n\n\t\t\t\t\t\t\t\t\t\t\t// If the value is the same as what we want or contains anything that we want, select it\n\t\t\t\t\t\t\t\t\t\t\tif(radio.attr(\"value\").toUpperCase() == value){\n\t\t\t\t\t\t\t\t\t\t\t\tselect = true;\n\t\t\t\t\t\t\t\t\t\t\t} else if(radio.attr(\"value\").search(regex) > -1){\n\t\t\t\t\t\t\t\t\t\t\t\tselect = true;\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t// Return false to stop the loop.\n\t\t\t\t\t\t\t\t\t\t\tif(select){\n\t\t\t\t\t\t\t\t\t\t\t\tradio.attr(\"checked\",\"checked\");\n\t\t\t\t\t\t\t\t\t\t\t\tdone = true;\n\t\t\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// If the value attribute did not work, then look for images whose src, alt, or title attribute match the value.\n\t\t\t\t\t\t\t\t\tif(!done){\n\t\t\t\t\t\t\t\t\t\tvar toClick = $KOBJ(\"img\");\n\t\t\t\t\t\t\t\t\t\t$KOBJ.each(toClick,function(){\n\t\t\t\t\t\t\t\t\t\t\tvar el = $KOBJ(this);\n\t\t\t\t\t\t\t\t\t\t\tvar select = false;\n\t\t\t\t\t\t\t\t\t\t\tif(el.attr(\"src\") && el.attr(\"src\").search(regex) > -1){\n\t\t\t\t\t\t\t\t\t\t\t\tselect = true;\n\t\t\t\t\t\t\t\t\t\t\t} else if(el.attr(\"title\") && el.attr(\"title\").search(regex) > -1){\n\t\t\t\t\t\t\t\t\t\t\t\tselect = true;\n\t\t\t\t\t\t\t\t\t\t\t} else if(el.attr(\"alt\") && el.attr(\"alt\").search(regex) > -1){\n\t\t\t\t\t\t\t\t\t\t\t\tselect = true;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tif(select){\n\t\t\t\t\t\t\t\t\t\t\t\t// Click on the image!\n\t\t\t\t\t\t\t\t\t\t\t\tKOBJ.fireEvent(el,\"click\");\n\t\t\t\t\t\t\t\t\t\t\t\tif($K(\"input[type=radio]\",el.parent()).length == 1){\n\t\t\t\t\t\t\t\t\t\t\t\t\t$K(\"input[type=radio]\",el.parent()).attr(\"checked\",\"checked\");\n\t\t\t\t\t\t\t\t\t\t\t\t\tdone = true;\n\t\t\t\t\t\t\t\t\t\t\t\t// Unless it's a link, then run the href. I may not want to be evaling here, but I am not sure how else to do this.\n\t\t\t\t\t\t\t\t\t\t\t\t// TODO: make this not use an eval.\n\t\t\t\t\t\t\t\t\t\t\t\t} else if(el.parent().length == 1 && el.parent()[0].tagName.toUpperCase() === \"A\"){\n\t\t\t\t\t\t\t\t\t\t\t\t\tKOBJ.fireEvent(el.parent(),\"click\");\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(el.parent().attr(\"href\").search(/javascript:/) > -1){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\teval(el.parent().attr(\"href\").replace(/^javascript:/,\"\"));\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdone = true;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else if(typeOfElement == \"div\"){\n\n\t\t\t\t\t\t\t\t\tKynetxFormDebug(\"Trying Image Specialties\");\n\t\t\t\t\t\t\t\t\tvar regex = new RegExp(value,\"i\");\n\t\t\t\t\t\t\t\t\tvar done = false;\n\n\t\t\t\t\t\t\t\t\t// Loop over the links within the DIV.\n\t\t\t\t\t\t\t\t\tif($K(\"a\",element).length > 1){\n\t\t\t\t\t\t\t\t\t \taddCSS = false;\n\t\t\t\t\t\t\t\t\t\t$K.each($K(\"a\",element),function(){\n\t\t\t\t\t\t\t\t\t\t\t\tvar imglink = $K(this);\n\t\t\t\t\t\t\t\t\t\t\t\t// Check the rel of the link.\n\t\t\t\t\t\t\t\t\t\t\t\tvar rel = imglink.attr(\"rel\");\n\t\t\t\t\t\t\t\t\t\t\t\tif (rel.toUpperCase() == value.toUpperCase()){\n\t\t\t\t\t\t\t\t\t\t\t\t    KOBJ.fireEvent(imglink,\"click\");\n\t\t\t\t\t\t\t\t\t\t\t            imglink.addClass(defaults.className);\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\timglink.removeClass(defaults.className);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else { // Otherwise, try jQuery's .val()\n\t\t\t\t\t\t\t\t\t\telement.val(value);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t//Remove the highlighting if value is blank\n\t\t\t\t\t\t\t\tif(value !== \"\" && addCSS){\n\t\t\t\t\t\t\t\t\telement.addClass(defaults.className);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\telement.removeClass(defaults.className);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Trigger events\n\t\t\t\t\t\t\t\tif(!thismap.no_click){\n\t\t\t\t\t\t\t\t\tKOBJ.fireEvent(element,\"blur\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(thismap.change){\n\t\t\t\t\t\t\t\t\tKOBJ.fireEvent(element,\"change\");\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Remove labels? Mainly for http://www.apple.com/\n\t\t\t\t\t\t\t\tif(thismap.nuke_labels){\n\t\t\t\t\t\t\t\t\t$KOBJ(\"[for=\"+selector.replace(/#|\\.|\\[name=|\\]/g,\"\")+\"]\").remove();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow \"value formatting was bad\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar elVal = String(element.val());\n\n\t\t\t\t\t\t\tKynetxFormDebug(\"Expected \" + value + \" got \" + element.val());\n\n\n\t\t\t\t\t\t\t// Double checks to see that what is returned is what we wanted. A little messy.\n\t\t\t\t\t\t\t// TODO: Put the following check into a function.\n\t\t\t\t\t\t\tif(!(String(element.val()).toUpperCase() == value.toUpperCase() || String($KOBJ(\":selected\",element).text()).replace(/(?:^\\s+|^)(.*?)(?:\\s+$|$)/,\"$1\").toUpperCase() == value.toUpperCase() || $KOBJ(\":selected\",element).text().replace(/(?:^\\s+|^)(.*?)(?:\\s+$|$)/,\"$1\").search(new RegExp(value,\"i\")) > -1)){\n\t\t\t\t\t\t\t\tthrow \"form didn't fill as expected, wanted \" + value + \", got \" + element.val() + \" and \" + $KOBJ(\":selected\",element).text().replace(/(?:^\\s+|^)(.*?)(?:\\s+$|$)/,\"$1\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t       \n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow \"selector blank\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow \"no data\";\n\t\t\t\t}\n\t\t\t} catch(error) {\n\t\t\t\terrorState = true;\n\t\t\t\tKynetxFormDebug(\"Error: \"+ $K.compactJSON(error) );\n\t\t\t\t// If the error was no data, don't mark it as an error.\n\t\t\t\tif(error == \"no data\"){\n\t\t\t\t\tKynetxFormDebug(\"No data for \" + thismap.map);\n\t\t\t\t\tnoData++;\n\t\t\t\t// Otherwise, increase the error count.\n\t\t\t\t} else {\n\t\t\t\t\tanyError = true;\n\t\t\t\t\terrors++;\n\t\t\t\t}\n\t\t\t\t// Push the data about this map onto the array\n\t\t\t\tstateArray.push({\"error\":error, \"selector\": selector, \"map\": mapTo});\n\t\t\t}\n\n\t\t\t// If there was no error, we still need to push data about the map onto the array.\n\t\t\tif(!errorState){\n\t\t\t\tKynetxFormDebug(\"Success for \" + thismap.map);\n\t\t\t\tsuccesses++;\n\t\t\t\tstateArray.push({\"error\":\"none\", \"selector\": selector, \"map\": mapTo});\n\t\t\t}\n\t\t});\n\n\n\n\t\t// Send the data to Visa.\n\t\tKynetxFillResult({'success':successes, 'failure':errors});\n\t\tvar status = 'none';\n\n\t\tvar length = wanted;\n\n\t\t// Check to see if it was no data, full success, only partial, or a fail.\n\t\tif(length === 0){\n\t\t\tstatus = 'none';\n\t\t} else if(successes == length){\n\t\t\tstatus = 'full';\n\t\t} else if(successes > 0){\n\t\t\tstatus = 'partial';\n\t\t} else if(successes === 0 && length !== 0){\n\t\t\tstatus = 'fail';\n\t\t}\n\n\t\tvar problemData = '';\n\n\t\t// Stick the bad data into a comma separated string.\n\t\t$KOBJ.each(stateArray, function(index,data){\n\t\t\tif(!(data.error == \"none\" || data.error == \"no data\")){\n\t\t\t\tif(problemData){\n\t\t\t\t\tproblemData += \",\";\n\t\t\t\t}\n\t\t\t\tproblemData += data.map;\n\t\t\t}\n\t\t});\n\n\t\t// Send the error data. ?callback=? is need to make it JSONP ish.\n\t    \tif(anyError && defaults.cburl){\n\t\t\t$KOBJ.getJSON(defaults.cburl + \"?callback=?&map=\"+defaults.mapname+\"&errors=\"+problemData,function(){});\n\t\t}\n\t    \t\n\t\t// Make a callback to KRL\n\t\tKOBJ.ff_logger('explicit', defaults['txn_id'], KOBJ.location(\"href\"), problemData, status, defaults['rule_name'], defaults['rid'],defaults['mapname']);\n\t};\n\t\t  \n  "},
      {
         "lhs": "fullurl",
         "rhs": {
            "args": [{
               "type": "str",
               "val": "caller"
            }],
            "predicate": "env",
            "source": "page",
            "type": "qualified"
         },
         "type": "expr"
      },
      {
         "lhs": "d",
         "rhs": {
            "args": [{
               "type": "str",
               "val": "domain"
            }],
            "predicate": "url",
            "source": "page",
            "type": "qualified"
         },
         "type": "expr"
      },
      {
         "lhs": "maps",
         "rhs": {
            "args": [{
               "args": [{
                  "type": "str",
                  "val": "domain"
               }],
               "predicate": "url",
               "source": "page",
               "type": "qualified"
            }],
            "predicate": "maps",
            "source": "datasource",
            "type": "qualified"
         },
         "type": "expr"
      }
   ],
   "meta": {
      "author": "Sam & JAM",
      "description": "\n    Prod!!!\n  ",
      "logging": "off",
      "name": "FormFiller"
   },
   "rules": [{
      "actions": null,
      "blocktype": "every",
      "callbacks": null,
      "cond": {
         "type": "bool",
         "val": "true"
      },
      "emit": null,
      "foreach": [[{
         "expr": {
            "type": "var",
            "val": "maps"
         },
         "var": ["map"]
      }]],
      "name": "findmap",
      "pagetype": {"event_expr": {
         "legacy": 1,
         "op": "pageview",
         "pattern": ".*",
         "type": "prim_event",
         "vars": []
      }},
      "state": "active"
   }],
   "ruleset_name": "a41x88"
}
